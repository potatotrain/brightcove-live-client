openapi: 3.0.0
info:
  title: Live API Reference
  description: |-
    Reference for the Brightcove Live API, used to create and manage live streaming events.

    For additional in-depth guides to features of the API, see the **[Support Site](https://support.brightcove.com/live-api)**.

    **Base URL**: https://api.bcovlive.io/v1
  version: 1.0.0
servers:
  - url: 'https://api.bcovlive.io/v1'
    variables: {}
tags:
  - name: Live Jobs
    description: |-
       Operations for creating live jobs, listing live jobs, getting job details, and canceling live jobs. There are also operations for activating and deactivating SEP jobs, and for inserting cuepoints or ID3 timed metadata.
  - name: RTMP Outputs
    description: >-
       Operations for creating and managing RTMP outputs. Note that RTMP output hours will be billed against event hours.
  - name: Clips
    description: >-
      Operations for creating and managing VOD clips
  - name: SSAI
    description: Operations for managing server-side ad insertion with live streams.
  - name: Credentials
    description: Operations for creating and managing credentials for secure destinations.
paths:
  /jobs:
    post:
      tags:
        - Live Jobs
      summary: Create a Live Job
      description: Create a live streaming job
      operationId: CreateALiveJob
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Create a live stream
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLiveJobRequestBody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveJob'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    get:
      tags:
        - Live Jobs
      summary: List Live Jobs
      description: >-
        'List live jobs - for additional useful information on the search filters, see [Getting a List of Live or VOD
        Jobs](https://support.brightcove.com/getting-list-live-or-vod-jobs)'
      operationId: ListLiveJobs
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
        - $ref: '#/components/parameters/start_token'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/account_id'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/modified_at'
        - $ref: '#/components/parameters/ad_insertion'
        - $ref: '#/components/parameters/static'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/ssai_state'
        - $ref: '#/components/parameters/region'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLiveJobsResponse'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}':
    get:
      tags:
        - Live Jobs
      summary: Get Live Job Details
      description: Get Live Job Details
      operationId: GetLiveJobDetails
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
             INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/playback-token':
    post:
      tags:
        - Live Jobs
      summary: Create Playback Token
      description: |-
        Live jobs created via the Live module in Studio (or by specifying `videocloud.video` when creating a job directly through the API) automatically create a special Video Cloud video that, when used in a Brightcove player, makes use of the `ad_config_id` property to select the specific source desired (i.e. SSAI source, DVR/no DVR, BYOCDN). Jobs which have SSAI enabled must always provide an `ad_config_id` in the player, even if the source desired is non-SSAI (this prevents an end user from omitting the `ad_config_id` and receiving a clear stream). **This applies only to live Video Cloud videos created via the Live module or Live API - manually created Video Cloud remote assets have no such restriction.**

        The request returns a generated `ad_config_id`.

        This behavior is handled automatically when you publish a live video from the Live module publishing screen, but may be useful if you have a custom workflow.
      operationId: CreatePlaybackToken
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Create a live stream
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlaybackTokenRequestBody'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackToken'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
             INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/activate':
    put:
      tags:
        - Live Jobs
      summary: Activate SEP Stream
      description: Activate SEP (static entry point) Stream
      operationId: ActivateSepStream
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateSepStreamResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/deactivate':
    put:
      tags:
        - Live Jobs
      summary: Deactivate SEP Stream
      description: 'Deactivate SEP (static entry point) Stream '
      operationId: DeactivateSepStream
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateSepStreamResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/cuepoint':
    post:
      tags:
        - Live Jobs
      summary: Manual Cue Point Insertion
      description: >-
        Inserts a manual Cue-Out with a duration to the Live ingest point.
      operationId: ManualAdCuePointInsertion
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Inserts a manual Cue-Out with a duration to the Live ingest point.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualAdCuePointInsertionbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualAdCuePointInsertionResponse'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: DB getItem, no results found - see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/cuepointdata':
    post:
      tags:
        - Live Jobs
      summary: Add or update Ad Metadata
      description: >-
        Allows  content metadata to be pushed and constantly updated out-of-band from a customer live stream..
      operationId: AddAdMatadata
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Contains a set of key/value pairs for ad requests.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAdMatadatabody'
        required: true
      responses:
        '200':
          description: '200'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: DB getItem, no results found - see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      tags:
        - Live Jobs
      summary: Delete Ad Metadata
      description: >-
        Deletes ad metadata from a customer live stream..
      operationId: DeleteAdMatadata
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '204':
          description: '204 NO CONTENT'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: DB getItem, no results found - see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/id3tag':
    post:
      tags:
        - Live Jobs
      summary: Insert ID3 Timed Metadata
      description: >-
        Inserts an ID3 timed metadata tag for an ongoing job. Note that: 1) If
        using timecode property, the job only stores the most recent request for
        insertion; 2) If using timecode property, the encoder must be sending
        SMPTE-formatted (HH:MM:SS:FF) timecode stored in the tc property via
        OnFI
      operationId: InsertId3TimedMetadata
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: |-
          'Inserts an ID3 timed metadata tag for an ongoing job. Note that:
            1. If using timecode property, the job only stores the most recent request for insertion
            2. If using timecode property, the encoder must be sending SMPTE-formatted (HH:MM:SS:FF) timecode stored in the tc property via OnFI'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertId3TimedMetadatabody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsertId3TimedMetadataResponse'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/cancel':
    put:
      tags:
        - Live Jobs
      summary: Cancel Live Job
      description: >-
         Cancel a live stream. When a live job is cancelled, it is ended, and any unprocessed VOD jobs associated with the live job will **not** be processed.
      operationId: CancelLiveJob
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelLiveJob'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/stop':
    put:
      tags:
        - Live Jobs
      summary: Stop Live Job
      description: >-
        Stop a live job. When a live job is stopped (as opposed to cancelled), the live stream will stop, but any VOD jobs associated with the live job **will** continue to process.
      operationId: StopLiveJob
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopLiveJob'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/rtmpouts':
    get:
      tags:
        - RTMP Outputs
      summary: List RTMP Outputs
      description: >-
        Get a list of RTMP outputs. See [Live API: RTMP Outputs](https://support.brightcove.com/live-api-rtmp-outputs) for more information on RTMP outputs.
      operationId: GetRTMPOutputs
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRTMPOutputs'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      tags:
        - RTMP Outputs
      summary: Create RTMP Output
      description: >-
        Create an RTMP output. See [Live API: RTMP Outputs](https://support.brightcove.com/live-api-rtmp-outputs) for more information on RTMP outputs.
      operationId: CreateRTMPOutput
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Create an RTMP output request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRTMPOutputRequestBody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRTMPOutputResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/rtmpouts/{rtmp_out_id}/stop':
    put:
      tags:
        - RTMP Outputs
      summary: Stop RTMP Output
      description: >-
        Stop an RTMP output. See [Live API: RTMP Outputs](https://support.brightcove.com/live-api-rtmp-outputs) for more information on RTMP outputs.
      operationId: StopRTMPOutput
      parameters:
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/XAPIKEY'
        - $ref: '#/components/parameters/rtmpOutId'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRTMPOutputResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you requested - see Live API Error Messages for more details
        '500':
          description: >-
            INTERNAL_SERVER_ERROR: see Live API Error Messages for more details
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /vods:
    post:
      tags:
        - Clips
      summary: Create VOD Clip
      description: 'Create VOD clips from a Live Stream. '
      operationId: CreateVodClip
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Create VOD clips from a Live Stream.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVodClipbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVodJobResponse'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/vods/{jvod_id}':
    get:
      tags:
        - Clips
      summary: Get VOD Clip Job
      description: 'Get a VOD clip job by id. '
      operationId: GetVodClipJob
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
        - $ref: '#/components/parameters/jvod_id'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VodJobs'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/jobs/{job_id}/vods':
    get:
      tags:
        - Clips
      summary: List VOD Clip Jobs
      description: >-
        List VOD clips for a Live Stream - for additional useful information on
        the search filters, see [Getting a List of Live or VOD
        Jobs](https://support.brightcove.com/getting-list-live-or-vod-jobs)
      operationId: ListVodClips
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
        - $ref: '#/components/parameters/JobId'
        - $ref: '#/components/parameters/start_token'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/account_id'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/modified_at'
        - $ref: '#/components/parameters/jvod_state'
        - $ref: '#/components/parameters/jvod_type'
        - $ref: '#/components/parameters/label'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVodJobs'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      tags:
        - Clips
      summary: 'Create VOD Clip (Alternate)'
      description: >-
        Create VOD clips from a Live Stream. This is operation is identical to
        the `POST` request to `/vods` - it is included for consistency, so that
        you can `GET` and `POST` requests to the same endpoint.
      operationId: CreateVodClipAlternate
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
        - $ref: '#/components/parameters/JobId'
      requestBody:
        description: Create VOD clips from a Live Stream.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVodClipbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VodJobs'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /ssai/applications:
    post:
      tags:
        - SSAI
      summary: Create Ad Configuration
      description: 'Create a configuration for server-side ad application. '
      operationId: CreateAdConfiguration
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Create a configuration for server-side ad application.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdConfigurationbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    get:
      tags:
        - SSAI
      summary: Get Ad Configurations
      description: Get ad applications for the current user.
      operationId: GetuserAdConfigurations
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/ssai/applications/account/{live_account_id}':
    get:
      tags:
        - SSAI
      summary: Get Account Ad Configurations
      description: 'Get ad applications for an account. '
      operationId: GetAccountAdConfigurations
      parameters:
        - $ref: '#/components/parameters/live_account_id'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/ssai/applications/application/{application_id}':
    get:
      tags:
        - SSAI
      summary: Get Ad Configuration
      operationId: GetAdConfiguration
      description: Get an ad application.
      parameters:
        - $ref: '#/components/parameters/application_id'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      tags:
        - SSAI
      summary: Update Ad Configuration
      description: 'Update a configuration for server-side ad application. '
      operationId: UpdateAdConfiguration
      parameters:
        - $ref: '#/components/parameters/application_id'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Update a configuration for server-side ad application.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdConfigurationbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      tags:
        - SSAI
      summary: Delete Ad Configuration
      description: 'Delete an ad application. '
      operationId: DeleteAdConfiguration
      parameters:
        - $ref: '#/components/parameters/application_id'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAdConfigurationResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /ssai/beaconsets:
    post:
      tags:
        - SSAI
      summary: Create Beacon Set
      description: >-
        Beacons are data points on playback sent to ad servers to track whether
        and how much of ads were played. Creates a beacon set.
      operationId: CreateBeaconSet
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: >-
          Beacons are data points on playback sent to ad servers to track
          whether and how much of ads were played. Creates a beacon set.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBeaconSetbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBeaconSetResponse'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    get:
      tags:
        - SSAI
      summary: Get Beacon Sets for User
      description: 'Get all beacon sets for the requesting user. '
      operationId: GetBeaconSetsForUser
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconSets'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /ssai/beaconsets/beaconset/beacon_set_id:
    put:
      tags:
        - SSAI
      summary: Update Beacon Set
      description: 'Updates a beacon set. '
      operationId: UpdateBeaconSet
      parameters:
        - $ref: '#/components/parameters/BeaconSetId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Updates a beacon set.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBeaconSetbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconSet'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      tags:
        - SSAI
      summary: Delete Beacon Set
      description: 'Deletes a beacon set. '
      operationId: DeleteBeaconSet
      parameters:
        - $ref: '#/components/parameters/BeaconSetId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBeaconSetResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/ssai/beaconsets/account/{live_account_id}':
    get:
      tags:
        - SSAI
      summary: Get Beacon Sets
      description: 'Get all beacon sets for an account. '
      operationId: GetBeaconSets
      parameters:
        - $ref: '#/components/parameters/live_account_id'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconSet'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /ssai/slates:
    post:
      tags:
        - SSAI
      summary: Ingest Slate Media Source Asset
      description: 'Ingest Slate Media Source Asset. '
      operationId: IngestSlateMediaSourceAsset
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Ingest Slate Media Source Asset.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestSlateMediaSourceAssetbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestSlateMediaSourceAssetResponse'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    get:
      tags:
        - SSAI
      summary: Get User Slate Media Source Assets
      description: 'Get Slate Media Source Assets for the current user. '
      operationId: GetUserSlateMediaSourceAssets
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSlateMediaSourceAssetsResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/ssai/slates/slate{slate_msa_id}':
    delete:
      tags:
        - SSAI
      summary: Delete Slate Media Source Asset
      description: 'Delete Slate Media Source Asset. '
      operationId: DeleteSlateMediaSourceAsset
      parameters:
        - $ref: '#/components/parameters/SlateMsaId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSlateMediaSourceAssetResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/ssai/slates/account/{live_account_id}':
    get:
      tags:
        - SSAI
      summary: Get Slates for Account
      description: 'Get all beacon sets for an account. '
      operationId: GetSlatesForAccount
      parameters:
        - $ref: '#/components/parameters/live_account_id'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSlateMediaSourceAssetsResponse'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /credentials:
    get:
      tags:
        - Credentials
      summary: List Credentials
      description: >-
        This endpoint can be used to get user credentials for a given user
        provided one has an API key.
      operationId: ListCredentials
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCredentials'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      tags:
        - Credentials
      summary: Create Credential
      description: 'Create a new credential. '
      operationId: CreateCredential
      parameters:
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Create a new credential.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCredentialbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCredential'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  '/credentials/{credential_id}':
    put:
      tags:
        - Credentials
      summary: Update Credential
      description: 'Update a credential. '
      operationId: UpdateCredential
      parameters:
        - $ref: '#/components/parameters/CredentialId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      requestBody:
        description: Update a credential.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentialbody'
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCredential'
        '400':
          description: >-
            BAD_REQUEST: Invalid input value - see Live API Error Messages for
            more details
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      tags:
        - Credentials
      summary: Delete Credential
      description: 'Delete a credential. '
      operationId: DeleteCredential
      parameters:
        - $ref: '#/components/parameters/CredentialId'
        - $ref: '#/components/parameters/ContentType'
        - $ref: '#/components/parameters/XAPIKEY'
      responses:
        '204':
          description: 'NO_CONTENT: the credential was deleted'
        '401':
          description: >-
            UNAUTHORIZED: Unauthorized - see Live API Error Messages for more
            details
        '404':
          description: >-
            RESOURCE_NOT_FOUND: The api could not find the resource you
            requested - see Live API Error Messages for more details
        '500':
          description: 'INTERNAL_SERVER_ERROR: see Live API Error Messages for more details'
      deprecated: false
      security: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
components:
  schemas:
    ActivateSepStreamResponse:
      properties:
        id:
          description: The job id for the stream that was activated
          type: string
          readOnly: true
      required:
        - id
      title: Activate_SEP_Stream_Response
      type: object
    playback_added_cdns:
      properties:
        label:
          description: A label to identify the CDN.
          type: string
        prepend:
          description: 'Typically, a domain or path to prepend to addresses'
          type: string
        protocol:
          description: Protocol to use in sending the stream to the CDN.
          type: string
      required:
        - label
        - prepend
        - protocol
      title: add_cdns
      type: object
    PlaybackToken:
      title: Create Playback Token Response
      description: An `ad_config_id` to use for playback
      type: object
      properties:
        playback_token:
          type: string
          example: 'live.TCaG-5GnlxmTFA8twsstmHqgET9npvC3nVtokT5nte...'
    AddAdMatadatabody:
      title: Add Ad Metadata Request body
      description: ->
        A set of key/value pairs for ad requests.
      type: object
      properties:
        ad_server_data:
          type: object
          description: >-
            Object containing a collection of keys and values. Values may be strings, numbers, or boolean.
          example: {
              "ad_server_data": {
                "one":"won",
                "two":2,
                "three":false
              }
            }
    Application:
      properties:
        account_id:
          description: The Live account id
          type: string
        application_ad_configuration:
          $ref: '#/components/schemas/Application.applicationAdConfiguration'
        application_id:
          description: The ad application id
          type: string
        description:
          description: The ad application description
          type: string
      required:
        - account_id
        - description
        - application_ad_configuration
        - application_id
      title: application
      type: object
    Application.applicationAdConfiguration:
      properties:
        ad_configuration_description:
          description: The ad configuration description
          type: string
        ad_configuration_strategy:
          description: >-
            The ad configuration strategy (SingleAdResponse, or
            MultipleAdResponse)
          type: string
        ad_configuration_transforms:
          description: The ad configuration transforms
          items:
            $ref: >-
              #/components/schemas/Application.applicationAdConfiguration.adConfigurationTransforms
          type: array
        ad_configuration_url_format:
          description: The URL template for the ad server
          type: string
        ad_configuration_variables:
          description: Key/value pairs for the ad server URL template
          type: object
        headers:
          description: The ad configuration headers
          type: object
        response_type:
          description: 'The ad configuration response type (Dfp, Vast, or SmartXML)'
          type: string
      required:
        - ad_configuration_description
        - response_type
        - headers
        - ad_configuration_strategy
        - ad_configuration_transforms
        - ad_configuration_url_format
        - ad_configuration_variables
      title: application.application_ad_configuration
      type: object
    Application.applicationAdConfiguration.adConfigurationTransforms:
      properties:
        xpath:
          description: The ad configuration transform xpath
          type: string
        xslt:
          description: The ad configuration transform xslt
          type: string
      required:
        - xpath
        - xslt
      title: application.application_ad_configuration.ad_configuration_transforms
      type: object
    BeaconSet:
      properties:
        account_id:
          description: The Live account id
          type: string
        beacon_urls:
          description: Array of beacon URLs
          items:
            $ref: '#/components/schemas/BeaconSet.beaconUrls'
          type: array
      required:
        - beacon_urls
      title: beacon_set
      type: object
    BeaconSet.beaconUrls:
      properties:
        beacon_type:
          description: Beacon type
          type: string
        beacon_url:
          description: Beacon URL
          type: string
      required:
        - beacon_url
        - beacon_type
      title: beacon_set.beacon_urls
      type: object
    BeaconSets:
      items:
        $ref: '#/components/schemas/BeaconSet'
      required:
        - beacon_set_id
        - account_id
      title: beacon_sets
      type: array
    CancelLiveJob:
      properties:
        id:
          description: >-
            The job id for the stream that was cancelled. No unprocessed VOD jobs associated with the live job will be processed.
          type: string
          readOnly: true
      title: Cancel_Live_Job_Response
      type: object
    StopLiveJob:
      properties:
        id:
          description: >-
            The job id for the stream that was stopped. Any unprocessed VOD jobs associated with the live job will continue to be processed.
          type: string
          readOnly: true
      title: Cancel_Live_Job_Response
      type: object
    CreateAdConfigurationbody:
      properties:
        account_id:
          description: >-
            Your Live account id (if you leave this blank, the request will
            still work, defaulting to account of the current user)
          type: string
        application_ad_configuration:
          $ref: >-
            #/components/schemas/CreateAdConfigurationbody.applicationAdConfiguration
        application_description:
          description: Human readable description of the ad application.
          type: string
      required:
        - application_ad_configuration
        - application_description
      title: Create_Ad_ConfigurationBody
      type: object
    CreateAdConfigurationbody.applicationAdConfiguration:
      properties:
        ad_configuration_description:
          description: Human readable description of the configuration.
          type: string
        ad_configuration_expected_response_type:
          description: The expected response type based on your ad server
          type: string
        ad_configuration_headers:
          description: >-
            An optional JSON object that can contain zero or more
            key-value-pairs, for which both key and value must be strings.  All
            of the standard URL substitutions are valid for headers.
          type: object
        ad_configuration_headers_for_impressions:
          description: >-
            If true, this configuration will send headers on all ad requests and
            impressions; if false, headers will not be sent on impressions
            (quartiles/impressions that we fire for tracking from an ad
            response).
          type: boolean
        ad_configuration_url_format:
          description: >-
            Format for the ad tag - see SSAI Using the Brightcove Live API for
            the available ad configuration variables.
          type: string
        ad_configuration_strategy:
          description: Specifies whether ad breaks should include single or multiple ads
          type: string
        ad_configuration_transforms:
          description: Array of ad configuration transforms.
          items:
            $ref: >-
              #/components/schemas/CreateAdConfigurationbody.applicationAdConfiguration.adConfigurationTransforms
          type: array
      required:
        - ad_configuration_description
        - ad_configuration_expected_response_type
        - ad_configuration_url_format
        - ad_configuration_strategy
        - ad_configuration_transforms
      title: Create_Ad_ConfigurationBody.application_ad_configuration
      type: object
    CreateAdConfigurationbody.applicationAdConfiguration.adConfigurationTransforms:
      properties:
        xpath:
          description: xpath for the transform.
          type: string
        xslt:
          description: xslt stylesheet for the transform.
          type: string
      required:
        - xpath
        - xslt
      title: >-
        Create_Ad_ConfigurationBody.application_ad_configuration.ad_configuration_transforms
      type: object
    CreateBeaconSetResponse:
      properties:
        account_id:
          description: The Live account id
          type: string
        beacon_urls:
          description: Array of beacon URLs
          items:
            $ref: '#/components/schemas/BeaconSet.beaconUrls'
          type: array
        inserted:
          description: Whether the beacon set was successfully added
          type: boolean
      required:
        - beacon_urls
      title: beacon_set
      type: object
    CreateBeaconSetbody:
      properties:
        account_id:
          description: Live account id
          type: string
        beacon_urls:
          description: Array of beacon URLs
          items:
            $ref: '#/components/schemas/CreateBeaconSetbody.beaconUrls'
          type: array
      required:
        - beacon_urls
      title: Create_beacon_setBody
      type: object
    CreateBeaconSetbody.beaconUrls:
      properties:
        beacon_type:
          description: >-
            'The beacon type - see ( https://support.brightcove.com/node/17763#Beacons) for the valid beacon types'
          type: string
        beacon_url:
          description: >-
            URL format for the beacon - see (
            https://support.brightcove.com/node/17763#Beacons) for the valid
            beacon variables
          type: string
      required:
        - beacon_url
        - beacon_type
      title: Create_beacon_setBody.beacon_urls
      type: object
    CreateCredential:
      properties:
        credential_id:
          description: The credential id
          type: string
        user_id:
          description: The user id
          type: string
      required:
        - credential_id
        - user_id
      title: Create_Credential_Response
      type: object
    CreateCredentialbody:
      properties:
        credential_default_for_type:
          description: Whether these are the default credentials for the request type
          type: boolean
          default: false
        credential_label:
          description: Label for the credential
          type: string
        credential_private:
          description: Private key or password depending on the type
          type: string
        credential_public:
          description: Public key or password depending on the type
          type: string
        credential_type:
          description: The credential type
          enum:
            - ftp
            - http
            - oauth
            - rtmp
            - s3
            - videocloud
            - zencoder
          type: string
        oauth_settings:
          $ref: '#/components/schemas/CreateCredentialbody.oauthSettings'
        user_id:
          description: GUID for which the credentials are being created.
          type: string
          default: (all users)
      required:
        - credential_label
        - credential_type
        - credential_private
        - credential_public
      title: Create_CredentialBody
      type: object
    CreateCredentialbody.oauthSettings:
      properties:
        url:
          description: >-
            OAuth access token URL for OAuth credentials needed to send
            notifications to a notification URL
          type: string
      required:
        - url
      title: Create_CredentialBody.oauth_settings
      description: >-
        OAuth settings for OAuth credentials needed to send notifications to a
        notification URL Required for oauth type credentials
      type: object
    CreateLiveJobRequestBody:
      properties:
        ad_audio_loudness_level:
          description: >-
            Adjust the loudness level of the audio. This is measured in LUFS and specified in dB. This is useful to set the output loudness level to conform to a standard (-23dB for EBU R.128) The recommended setting is -23.
          maximum: 60
          minimum: -60
          type: number
        ad_insertion:
          default: false
          description: >-
            Setting this parameter to true will enable server side ad insertion
            (SSAI) on the job. Current support includes, DFP, Freewheel, or any
            VAST 2.0/3.0 ad tags.
          type: boolean
        add_cdns:
          description: >-
            Array of additional CDN providers to be used for manifest generation. For each CDN provided, the manifest will be prepended accordingly
          items:
            $ref: '#/components/schemas/CreateLiveJobRequestBody.addCdns'
          type: array
        beacon_set:
          description: ID for a beacon set (for SSAI only).
          type: string
        channel_type:
          default: event
          description: >-
            'Indicates whether the job should be billed as `event` hours or a channel (`24x7`) - see [Channels and Event Hours](https://support.brightcove.com/overview-brightcove-live-api#Channels_and_hours).'
          enum:
            - 24x7
            - event
          type: string
        cidr_whitelist:
          description: |-
            An array of [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) blocks.

            **Required for ALL jobs where `protocol` = `rtp`, `rtp-fec`, or `srt`.**

            This property is **not** allowed for RTMP jobs (API will return an error).
          type: array
          items:
            type: string
            description: >-
              Allowed IP address for input stream
          example: ["192.168.0.1/32"]
        ip_whitelist:
          description: |-
            An array of IP addresses.

            This property is **not** allowed for jobs where `protocol` = `rtp`, `rtp-fec`, or `srt`. (API will return an error).
          type: array
          items:
            type: string
            description: >-
              Allowed IP address for input stream
          example: ["192.168.0.1/32"]
        encryption:
          $ref: '#/components/schemas/CreateLiveJobRequestBody.encryption'
        event_length:
          default: 0
          description: >-
            Used to preset and define an end time for the live event. At any point within the specified `event_length` you may reconnect to your stream. The `event_length` setting goes into effect as soon as streaming begins. In case the encoder stops, the live stream will be kept available for the **remainder** of the `event_length` or the `reconnect_time`, whichever is *greater* (so if `event_length` is not set, its value is `0`, and `reconnect_time` will determine how long the stream is kept available)
          maximum: 93600
          minimum: 0
          type: integer
        hls_endlist:
          default: true
          description: >-
            Whether an `EXT-X-ENDLIST` tag should be added to the stream playlist when you stop the stream or the `reconnect_time` window has been reached. The `EXT-X-ENDLIST` tag indicates that no more Media Segments will be added to the Media Playlist file and helps prevent
            the player from displaying error messages when the stream stops.
          type: boolean
        live_dvr_ads_window_duration:
          default: 100
          description: >-
            Indicates the window in seconds, for which ads will be served on DVR playback, beyond which `slate` will be served on DVR playback.
          maximum: 600
          minimum: 0
          type: integer
        live_dvr_sliding_window_duration:
          default: 0
          description: >-
            The time, in seconds, to keep in the live DVR manifest. If the stream duration is longer than the window duration, segment references will be removed first in first out. **Note: for SSAI jobs, the limit is `7200`.
          maximum: 86400
          minimum: 1
          type: integer
        live_stream:
          description: Indicates that the job is a live streaming job.
          type: boolean
        max_hls_protocol_version:
          default: 3
          description: >-
            Sets the maximum HLS protocol version to use. Special features will be used as available. Default is `3`.
          maximum: 5
          minimum: 1
          type: integer
        notifications:
          description: >-
            'Array of notification destination objects or strings - notifications defined here are for job-level events.  A notification will be sent to the destination when selected event occurs. You can use a simple string with a url: &quot;http://log:pass@httpbin.org/post&quot;, or you can use an object. See [Events](https://support.brightcove.com/live-api-notifications#Events) for an explanation of the events reported in `state_changed` notifications. <br> Retry strategy: In the event of a failed request to send a notification, the default retry strategy is to retry 50 times with an exponential delay between attempts: <br> `max_retry_times = 50` <br> `delay_delta_s = 5` <br> `next_retry =
            now_s + retry_count * delay_delta_s`'
          items:
            oneOf:
              - $ref: '#/components/schemas/Notification'
              - type: string
                description: A URL to send notifications to
          type: array
        outputs:
          description: >-
            Array of output specifications for live and VOD assets to be created
            from the live stream.
          items:
            $ref: '#/components/schemas/CreateLiveJobRequestBody.outputs'
          type: array
        protocol:
          description: |-
            Specifies the input protocol that will be used - note that `rtmp` is for FLV input; the other protocols are for MPEG2-TS
          type: string
          enum:
            - rtmp
            - rtp
            - rtp-fec
            - srt
          default: rtmp
        reconnect_time:
          default: 1800
          description: >-
            The time, in seconds, to wait for a stream to reconnect to the encoder. If the encoder is disconnected, the live stream will be kept available for the full `reconnect_time` or for the **remainder** of the event length, whichever is greater.
          maximum: 7200
          minimum: 1
          type: integer
        region:
          description: >-
            AWS region - you can also specify region as the alias for a list set up for the account by Brightcove Support. See [Supported AWS Regions](https://support.brightcove.com/overview-brightcove-live-api#Support_aws_regions) for more details on the support in each region.
          enum:
            - us-west-2
            - us-east-1
            - ap-southeast-2
            - ap-northeast-1
            - ap-southeast-1
            - ap-south-1
            - eu-central-1
            - eu-west-1
          type: string
        rtmp_credentials:
          description: The label for an RTMP credential to protect the RTMP stream
          type: string
        rtmp_ip_whitelist:
          description: Array of IP addresses white-listed for RTMP delivery
          items:
            type: string
          type: array
        slate:
          description: Id for a set of slate assets
          type: string
        static:
          default: false
          description: Whether this is a static entry point (SEP) job
          type: boolean
        videocloud:
          $ref: '#/components/schemas/CreateLiveJobRequestBody.videocloud'
      required:
        - live_stream
        - region
        - outputs
      title: Create_Live_JobBody
      type: object
      example: {
            "live_dvr_sliding_window_duration": 1,
            "notifications": [
                "http://solutions.brightcove.com/bcls/live/live-callbacks.php",
            ],
            "outputs": [{
                    "height": 720,
                    "video_bitrate": 2100,
                    "segment_seconds": 4,
                    "keyframe_interval": 60,
                    "width": 1280,
                    "video_codec": "h264",
                    "label": "hls720p",
                    "h264_profile": "high",
                    "live_stream": true
                },
                {
                    "height": 540,
                    "video_bitrate": 1500,
                    "segment_seconds": 4,
                    "keyframe_interval": 60,
                    "width": 960,
                    "video_codec": "h264",
                    "label": "hls540p",
                    "h264_profile": "main",
                    "live_stream": true
                },
                {
                    "height": 360,
                    "video_bitrate": 800,
                    "segment_seconds": 4,
                    "keyframe_interval": 60,
                    "width": 640,
                    "video_codec": "h264",
                    "label": "hls360p",
                    "h264_profile": "main",
                    "live_stream": true
                }
            ],
            "region": "us-west-2",
            "reconnect_time": 1800,
            "live_stream": true
        }
    CreateLiveJobRequestBody.addCdns:
      properties:
        label:
          description: A label to identify the CDN.
          type: string
        prepend:
          description: CDN hostname to be prepended to addresses
          type: string
        protocol:
          description: Protocol to use for the stream delivery
          enum:
            - http
            - https
          type: string
        token_auth:
          $ref: '#/components/schemas/CreateLiveJobRequestBody.addCdns.tokenAuth'
        vendor:
          description: CDN vendor such as akamai
          type: string
      required:
        - label
        - prepend
        - protocol
      title: Create_Live_Job_Request_Body.add_cdns
      type: object
    CreateLiveJobRequestBody.addCdns.tokenAuth:
      description: Token authentication details
      properties:
        auth_type:
          description: >-
            Token authentication type - currently, the only supported value is
            `Akamai2.0`
          type: string
        key:
          description: Your Akamai token auth password
          type: string
        media:
          $ref: >-
            #/components/schemas/CreateLiveJobRequestBody.addCdns.tokenAuth.media
        token_name:
          description: Your Akamai token token name
          type: string
      required:
        - auth_type
        - key
        - token_name
      title: Create_Live_Job_Request_Body.add_cdns.token_auth
      type: object
    CreateLiveJobRequestBody.addCdns.tokenAuth.media:
      description: Object containing tokenization properties
      properties:
        end_time:
          description: 'The time to end token auth, epoch time in seconds'
          format: int32
          type: integer
        start_time:
          default: now
          description: >-
            The time to apply token auth - &quot;now&quot; or epoch time in
            seconds
          format: int32
          oneOf:
            - type: integer
            - enum:
                - now
              type: string
        ttl:
          description: The time to live in seconds - either `end_time` or `ttl` is required
          format: int32
          type: integer
      title: Create_Live_Job_Request_Body.add_cdns.token_auth.media
      type: object
    CreateLiveJobRequestBody.encryption:
      properties:
        external_url:
          description: >-
            The URL for the external encryption key - this field is required if you specify type as external, and the external key must match the
            `key` value
          type: string
        key:
          description: |-
            The encryption key - either a `key`, `passphrase`, or `key_rotation` is required; if the type is `external`, `key` is required.

            The key must be 32 hexadecimal characters. For best results, generate a key by going to [a key generator](http://www.allkeysgenerator.com/Random/Security-Encryption-Key-Generator.aspx) and selecting the `128-bit` and `Hex` options.
          type: string
          maxLength: 32
          minLength: 32
        key_rotation:
          default: false
          description: >-
            Whether to use key rotation - either a `key`, `passphrase`, or `key_rotation` is required
          type: boolean
        method:
          description: The encryption method to use.
          enum:
            - aes-128
          type: string
        passphrase:
          description: >-
            The encryption key - either a `key`, `passphrase`, or `key_rotation` is required
          type: string
        rotate_every:
          default: 10
          description: Interval for key rotation in video segments
          type: integer
        type:
          description: >-
            The encryption type, depending on whether an internal or external key server will be used.
          enum:
            - internal
            - external
          type: string
      required:
        - method
        - type
      title: Create_Live_Job_Request_Body.encryption
      description: Encryption to apply to the stream.
      type: object
    CreateLiveJobRequestBody.outputs:
      properties:
        ad_audio_loudness_level:
          description: >-
            Adjust the loudness level of the audio. This is measured in LUFS and specified in dB. This is useful to set the output loudness level to conform to a standard (-23dB for EBU R.128) The recommended setting
            is -23.
          maximum: 60
          minimum: -60
          type: number
        audio_bitrate:
          default: 192
          description: 'An output bitrate setting for the audio track, in Kbps'
          maximum: 1024
          minimum: 16
          type: number
        audio_codec:
          default: aac
          description: >-
             The output audio codec to use. Note: Only `aac` is supported.
          enum:
            - aac
          type: string
        color_full_width:
          description: |-
            Specifying `color_full_width`as `true` will force a color range conversion of input video file to "full", if it is "limited". By default, the encoder will not try to change the range.

            Note:
              - `color_full_width` cannot be used with "copy_video": true
              - This option conflicts with video transmuxing
          type: boolean
        copy_audio:
          description: >-
            Specifying copy_audio will take the audio track from the input video file and transmux it into the resulting output file.
          type: boolean
        copy_video:
          description: >-
            Specifying copy_video will take the video track from the input video file and transmux it into the resulting output file.
          type: boolean
        credentials:
          description: >-
            The name for credentials with private and public keys can be stored with Brightcove to avoid passing plain text on API requests. This is required if the S3 or FTP origins are restricted. If credentials are not provided, it will be assumed that the origin restrictions are set to public or credentials are passed along with the URL.
          type: string
        h264_profile:
          description: >-
            H.264 has three commonly-used profiles: Baseline (lowest), Main, and High. Lower levels are easier to decode, but higher levels offer better compression. For the best compression quality, choose High. For playback on low-CPU machines or many mobile devices, choose
            `baseline`.
          enum:
            - baseline
            - main
            - high
          type: string
        height:
          default: 480
          description: >-
            Video frame height. If no `width` or `height` is supplied, the source dimensions are used. If either `width` or `height` is supplied, the other dimension will be calculated to maintain the aspect ratio of the source.
          type: integer
        width:
          default: 640
          description: >-
            Video frame width. If no `width` or `height` is supplied, the source dimensions are used. If either `width` or `height` is supplied, the other dimension will be calculated to maintain the aspect ratio of
            the source.
          type: integer
        keyframe_interval:
          description: >-
            The maximum number of frames between each keyframe. If you set a low keyframe_interval it will increase the size / decrease the quality of your output file, but it will allow more precise scrubbing in most players. It’s recommended to have at least one keyframe per segment. If keyframe_interval is not provided, keyframes will follow the input GOP structure.
          maximum: 600
          minimum: 1
          type: integer
        label:
          description: Label for the live or VOD asset.
          type: string
        playlist_label:
          type: string
          description: >-
            Only applicable for instant mode VODs. Indicates which playlist to use to create a VOD output (from the live job). Only necessary if custom playlists were defined at live job creation.
        mode:
          type: string
          description: >-
            Expedite VOD publishing by leveraging existing live renditions and segment boundaries
          enum:
            - instant
        live_stream:
          description: >-
            For jobs, setting live_stream to true indicates the output is a live rendition. If live_stream is false, or is not set, the output will be treated as a VOD output.
          type: boolean
        notifications:
          description: >-
            Array of notification destination objects or strings - notifications defined here are for job-level events.  A notification will be sent to the destination when selected event occurs. You can use a simple string with a url: &quot;http://log:pass@httpbin.org/post&quot;, or you can use an object. See [Events](https://support.brightcove.com/live-api-notifications#Events) for an explanation of the events reported in `state_changed` notifications. <br> Retry strategy: In the event of a failed request to send a notification, the default retry strategy is to retry 50 times with an exponential delay between attempts: <br> `max_retry_times = 50` <br> `delay_delta_s = 5` <br> `next_retry = now_s + retry_count * delay_delta_s`
          items:
            oneOf:
              - type: string
              - properties:
                  event:
                    description: The type of event to send notifications for
                    enum:
                      - state_changed
                      - first_segment_uploaded
                      - output_finished
                    type: string
                type: object
          type: array
        rendition_label:
          description: >-
            Indicates what rendition to use to create a VOD output (from the live job) or which renditions to use. By default, the system uses any transmuxed rendition or the highest resolution output if there is no transmuxed output.
          type: string
        segment_seconds:
          description: Sets the maximum duration of each segment in a segmented output.
          maximum: 20
          minimum: 2
          type: number
        skip_audio:
          description: Specifying skip_audio removes the audio track.
          type: boolean
        skip_video:
          description: Specifying skip_video removes the video track.
          type: boolean
        streams:
          description: >-
            'When creating a playlist, the streams field is used to define which output renditions (by label) should be included in the manifest. Example format [{&quot;source&quot;: &quot;1080p&quot;}, {&quot;source&quot;: &quot;720p&quot;}].'
          type: object
        type:
          description: >-
            The only type supported is a playlist. This is used for generating multiple master playlists with different renditions in the HLS manifest with the defined stream labels.
          enum:
            - playlist
          type: string
        url:
          description: >-
            For VOD, `url` is mandatory (**unless** the destination is `videocloud`, in which case you dod **not** include the `url`) and sets the destination of the final asset destination. For access restricted origins, the credentials a can be passed along with the URL or stored within the Brightcove system. For Live, this is reserved for future use.
          type: string
        video_bitrate:
          description: target video bitrate in kbps
          maximum: 10000
          minimum: 64
          type: integer
        video_codec:
          description: 'The output video codec. Note: Only `h264` is supported.'
          enum:
            - h264
          type: string
        videocloud:
          $ref: '#/components/schemas/CreateVodClipbody.outputs.videocloud'
      required:
        - label
        - live_stream
        - video_bitrate
        - segment_seconds
      title: Create_Live_Job_Request_Body.outputs
      type: object
    CreateLiveJobRequestBody.videocloud:
      properties:
        account_id:
          description: >-
            The Video Cloud Account ID the video for the remote asset live stream should be created in. Only required if the account ID is not the default configured in your Live account. If set, you must also set the `videocloud.credentials` property.
          type: number
        credentials:
          description: >-
            Credentials to use for Video Cloud authentication. Only required if
            you set `videocloud.account_id`.
          type: string
        live_to_vod:
          type: boolean
          default: false
          description: >-
            If set to `true`, a full VOD version of the live event will be created after the event is complete. Requires that there is a Video Cloud account associated with the Live account, *and* the `videocloud.video` property is set.
        mode:
          type: string
          description: >-
            Expedite clip publishing by leveraging existing live renditions and segment boundaries
          enum:
            - instant
        video:
          $ref: '#/components/schemas/CreateLiveJobRequestBody.videocloud.video'
      required:
        - video
        - ingest
      title: Create_Live_Job_Request_Body.videocloud
      type: object
      description: >-
        Video Cloud customers have the option to create a video to use for the live stream. The `videocloud` object in the `job` settings is used for this purpose. If you want to define VOD clips to send to Video Cloud, use the `videocloud` object in `outputs`.
    CreateLiveJobRequestBody.videocloud.ingest:
      properties:
        callbacks:
          description: >-
            An array of URLs that notifications for the ingest job should be
            sent to
          items:
            type: string
          type: array
      title: Create_Live_Job_Request_Body.videocloud.ingest
      description: >-
        An object containing inputs for Video Cloud video ingestion - see the [Dynamic Ingest Reference](https://brightcovelearning.github.io/Brightcove-API-References/dynamic-ingest-api/v1/doc/swagger.html#operations-Ingest-AccountsVideosIngestRequestsByAccountIdAndVideoIdPost) - do not include the master field, as that information will be provided by the Live API
      type: object
    CreateLiveJobRequestBody.videocloud.video:
      properties:
        cue_points:
          description: Array of cuepoint objects
          items:
            $ref: >-
              #/components/schemas/CreateLiveJobRequestBody.videocloud.video.cuePoint
          type: array
        custom_fields:
          description: >-
            An object whose properties are `fieldname`:`value` pairs - be sure to the *internal* name of the field
          type: object
        description:
          description: Video short description
          type: string
        drm_disabled:
          description: >-
            Use to disable DRM packaging for this video - applies only to DRM-enabled accounts
          type: boolean
        economics:
          type: string
          description: whether the video supports ads
          enum:
            - AD_SUPPORTED
            - FREE
        geo:
          $ref: '#/components/schemas/CreateLiveJobRequestBody.videocloud.video.geo'
        long_description:
          description: A longer description of the video
          type: string
        name:
          description: Title of the video clip
          type: string
        reference_id:
          description: Reference id for the clip - must be unique within the account
          type: string
        schedule:
          $ref: >-
            #/components/schemas/CreateLiveJobRequestBody.videocloud.video.schedule
        state:
          type: string
          description: Whether the video should be active or inactive
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
        tags:
          description: >-
            Array of tags for the video - note that  tags are string that may not contain a comma
          type: object
      required:
        - name
      title: Create_Live_Job_Request_Body.videocloud.video
      description: >-
        'An object containing inputs for Video Cloud video object creation - see the [CMS API Reference](https://brightcovelearning.github.io/Brightcove-API-References/cms-api/v1/doc/swagger.html#operations-Videos-CreateVideo)'
      type: object
    CreateLiveJobRequestBody.videocloud.video.cuePoint:
      properties:
        force-stop:
          description: whether video is force-stopped at the cue point
          type: boolean
        metadata:
          description: optional metadata string (512 single-byte characters maximum)
          type: string
        name:
          description: cue point name
          type: string
        time:
          description: 'time of the cue point in seconds; example: 10.527'
          type: number
        type:
          description: cue point type
          enum:
            - AD
            - CODE
          example: AD
          type: string
      required:
        - time
        - type
      title: Create_Live_Job_Request_Body.videocloud.video.cue_point
      type: object
    CreateLiveJobRequestBody.videocloud.video.geo:
      properties:
        countries:
          description: >-
            array of ISO 3166 list of 2-letter
            codes(https://www.iso.org/obp/ui/#home) (search for &quot;country
            codes&quot;)
          type: string
        exclude_countries:
          description: >-
            if true, country array is treated as a list of countries excluded
            from viewing
          type: boolean
        restricted:
          description: whether geo-restriction is enabled for this video
          type: boolean
      required:
        - countries
        - exclude_countries
        - restricted
      title: Create_Live_Job_Request_Body.videocloud.video.geo
      type: object
      description: map of geo-filtering properties
    CreateLiveJobRequestBody.videocloud.video.schedule:
      properties:
        ends_at:
          description: >-
            end date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format
          type: string
        starts_at:
          description: >-
            start date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format
          type: string
      required:
        - ends_at
        - starts_at
      title: Create_Live_Job_Request_Body.videocloud.video.schedule
      type: object
      description: map of scheduling properties
    CreatePlaybackTokenRequestBody:
      title: Create Playback Token Request Body
      description: Create Playback Token Request Body
      type: object
      properties:
        dvr:
          type: boolean
          description: whether DVR playback is required
          default: false
        application_id:
          type: string
          description: The application id for an SSAI job
        playback_added_cdn:
          type: string
          description: The label for the BYOCDN if you are using one
    CreateVodClipbody:
      properties:
        live_job_id:
          description: The id of Live Stream job to create the VOD clip from.
          type: string
        outputs:
          description: Array of VOD outputs
          items:
            $ref: '#/components/schemas/CreateVodClipbody.outputs'
          type: array
      required:
        - live_job_id
        - outputs
      title: Create_VOD_ClipBody
      type: object
      example: {
          "live_job_id": "3ae7fa89943f4a96aa273fbbf175d527",
          "outputs": [{
            "label": "first 30 secs of live job",
            "notifications": ["http://solutions.brightcove.com/bcls/live/live-callbacks.php"],
            "stream_start_time": 10,
            "stream_end_time": 300,
            "credentials": "{{vc_credentials}}",
            "videocloud": {
              "video": {
                "name": "TEST Clip"
              },
              "ingest": {}
            }
          }]
        }
    CreateVodClipbody-Alternate:
      properties:
        outputs:
          description: Array of VOD outputs
          items:
            $ref: '#/components/schemas/CreateVodClipbody.outputs'
          type: array
      required:
        - outputs
      title: Create_VOD_ClipBody
      type: object
    CreateVodClipbody.outputs:
      properties:
        credentials:
          description: >-
            The name of the credentials configured in your Live account for this destination. Not required if using the default Video Cloud account associated with your Live account.
          type: string
        notifications:
          description: |-
            'Array of notification destination objects or strings - notifications defined here are for job-level events.  A notification will be sent to the destination when selected event occurs. You can use a simple string with a url: &quot;http://log:pass@httpbin.org/post&quot;, or you can use an object. See [Events](https://support.brightcove.com/live-api-notifications#Events) for an explanation of the events reported in `state_changed` notifications. <br> Retry strategy: In the event of a failed request to send a notification, the default retry strategy is to retry 50 times with an exponential delay between attempts: <br> `max_retry_times = 50` <br> `delay_delta_s = 5` <br> `next_retry = now_s + retry_count * delay_delta_s`

            **Note:** notifications are *not* supported for instant mode VODs.'
          items:
            oneOf:
              - $ref: '#/components/schemas/Notification'
              - type: string
                description: A URL to send notifications to
          type: array
        duration:
          description: |-
            Duration of the clip in seconds. The <code>duration</code> must be used alone to define a clip that will be made of the final <code>{duration}</code> seconds of the stream. <code>duration</code>

            **Note:** the duration parameter is not available for instant mode VODs.
          maximum: 172800
          minimum: 0
          type: integer
        start_time:
          description: >-
            Start time for the clip in Epoch (Unix) time (seconds), <code>start_time</code> must be used alone or with <code>end_time</code>.
          type: integer
        end_time:
          description: >-
            End time for the clip in Epoch (Unix) time (seconds), <code>end_time</code> must be used alone or with <code>start_time</code>.
          type: integer
        stream_start_time:
          description: >-
            Start time in seconds for the clip relative to the start time of the live stream, <code>stream_start_time</code> must be used alone or with <code>stream_end_time</code>.
          maximum: 2147483647
          minimum: 0
          type: integer
        stream_end_time:
          description: >-
            End time in seconds for the clip relative to the start time of the live stream, <code>stream_end_time</code> must be used alone or with <code>stream_start_time</code>.
          type: integer
        stream_start_timecode:
          description: >-
            Start time for a frame-accurate clip in an SMPTE-formatted (HH:MM:SS:FF) timecode from the start of the stream, <code>stream_start_timecode</code> must be used alone or with <code>stream_end_timecode</code>. Requires that the encoder is sending timecodes.
          type: string
        stream_end_timecode:
          description: >-
            End time for a frame-accurate clip in an SMPTE-formatted (HH:MM:SS:FF) timecode from the end of the stream, <code>stream_end_timecode</code> must be
            used alone or with <code>stream_start_timecode</code>. Requires that the encoder is sending timecodes.
          type: string
        label:
          description: Label for the output
          type: string
        mode:
          type: string
          description: >-
            Expedite clip publishing by leveraging existing live renditions and segment boundaries
          enum:
            - instant
        playlist_label:
          type: string
          description: >-
            Only applicable for `instant` mode VODs. Indicates which playlist to use to create a VOD output (from the live job). Only necessary if custom playlists were defined at live job creation.
        url:
          description: >-
            `url` is mandatory (**unless** the destination is `videocloud`, in which case you dod **not** include the `url`) and sets the destination of the final asset destination. For access restricted origins, the credentials a can be passed along with the URL or stored within the Brightcove system. For Live, this is reserved for future use.
          type: string
        videocloud:
          $ref: '#/components/schemas/CreateVodClipbody.outputs.videocloud'
      required:
        - label
      title: Create_VOD_ClipBody.outputs
      type: object
    CreateVodClipbody.outputs.videocloud:
      properties:
        account_id:
          description: >-
            The Video Cloud Account ID the clip should be ingested to. Only required if using Video Cloud Account ID other than the default configured in your Live account. If set, you must also set the
            `credentials` property on the output.
          type: number
        ingest:
          $ref: '#/components/schemas/CreateVodClipbody.outputs.videocloud.ingest'
        video:
          $ref: '#/components/schemas/CreateVodClipbody.outputs.videocloud.video'
      required:
        - video
        - ingest
      title: Create_VOD_ClipBody.outputs.videocloud
      description: An object containing inputs for Video Cloud ingestion
      type: object
    CreateVodClipbody.outputs.videocloud.ingest:
      properties:
        callbacks:
          description: >-
            An array of URLs that notifications for the ingest job should be sent to
          items:
            type: string
          type: array
        capture-images:
          description: >-
            'Whether poster and thumbnail should be captured during transcoding; defaults to `true` if the the profile has image renditions, `false` if it does not - see [Images and the Dynamic Ingest API](https://support.brightcove.com/images-and-dynamic-ingest-api) for more information'
          example: true
          type: boolean
        profile:
          description: >-
            The ingest profile to use - we recommend that you do **not** include this field and use the account default profile instead
          type: string
        audio_tracks:
          description: >-
            array of audio track objects - see [Implementing Multiple Audio Tracks Using the APIs](https://support.brightcove.com/implementing-multiple-audio-tracks-using-apis) for more information.  **Dynamic Delivery only**
          type: array
          items:
            type: object
            properties:
              merge_with_existing:
                type: boolean
                description: >-
                  Whether to replace existing audio tracks or add the new ones (currently only `false` is supported)
                default: false
              masters:
                type: array
                description: Array of audio master objects
                items:
                  type: object
                  properties:
                    url:
                      type: string
                      description: URL for the audio file
                    language:
                      type: string
                      description: >-
                        'Language code for the audio track from the subtags in (https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry) (default can be set for the account by contacting
                        Brightcove Support)'
                    variant:
                      type: string
                      description: >-
                        the type of audio track (default can be set for the account by contacting Brightcove Support)
                      enum:
                        - main
                        - alternate
                        - commentary
                        - dub
                        - descriptive
        text_tracks:
          description: >-
            array of text_tracks objects - see [Ingesting WebVTT Files (Text Tracks)](https://support.brightcove.com/ingesting-webvtt-files-text-tracks)
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                description: URL for a WebVTT file
              srclang:
                type: string
                description: ISO 639 2-letter (alpha-2) language code for the text tracks
              kind:
                type: string
                description: How the vtt file is meant to be used
                enum:
                  - captions
                  - subtitles
                  - chapters
                  - metadata
                default: captions
              label:
                type: string
                description: User-readable title for tracks
              default:
                type: boolean
                description: Sets the default language for captions/subtitles
                default: false
        poster:
          description: >-
            The custom video poster to be ingested - see [Images and the Dynamic Ingest API](https://support.brightcove.com/images-and-dynamic-ingest-api) for more information. Do not use if `capture-images` is set to `true`
          type: object
          properties:
            url:
              type: string
              description: URL for the video poster image
            height:
              type: integer
              description: Height of the poster in pixels
            width:
              type: integer
              description: Width of the poster in pixels
        thumbnail:
          description: >-
            The custom video thumbnail to be ingested - see [Images and the Dynamic Ingest API](https://support.brightcove.com/images-and-dynamic-ingest-api) for more information. Do not use if `capture-images` is set to `true`
          type: object
          properties:
            url:
              type: string
              description: URL for the video thumbnail image
            height:
              type: integer
              description: Height of the thumbnail in pixels
            width:
              type: integer
              description: Width of the thumbnail in pixels
      title: Create_VOD_ClipBody.outputs.videocloud.ingest
      description: >-
        An object containing inputs for Video Cloud video ingestion - see the [Dynamic Ingest Reference](https://brightcovelearning.github.io/Brightcove-API-References/dynamic-ingest-api/v1/doc/swagger.html#operations-Ingest-AccountsVideosIngestRequestsByAccountIdAndVideoIdPost) - do not include the master field, as that information will be provided by the Live API. If no ingest profile is specified, the account default profile will be used.
      type: object
    CreateVodClipbody.outputs.videocloud.video:
      properties:
        cue_points:
          description: Array of cuepoint objects
          items:
            $ref: >-
              #/components/schemas/CreateVodClipbody.outputs.videocloud.video.cuePoint
          type: array
        custom_fields:
          description: >-
            An object whose properties are `fieldname`:`value` pairs - be sure to the *internal* name of the field
          type: object
        description:
          description: Video short description
          type: string
        drm_disabled:
          description: >-
            Use to disable DRM packaging for this video - applies only to DRM-enabled accounts
          type: boolean
        economics:
          type: string
          description: whether the video supports ads
          enum:
            - AD_SUPPORTED
            - FREE
        geo:
          $ref: '#/components/schemas/CreateVodClipbody.outputs.videocloud.video.geo'
        long_description:
          description: A longer description of the video
          type: string
        name:
          description: Title of the video clip
          type: string
        reference_id:
          description: Reference id for the clip - must be unique within the account
          type: string
        schedule:
          $ref: >-
            #/components/schemas/CreateVodClipbody.outputs.videocloud.video.schedule
        state:
          type: string
          description: Whether the video should be active or inactive
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
        tags:
          description: >-
            Array of tags for the video - note that  tags are string that may not contain a comma
          type: object
      required:
        - name
      title: Create_VOD_ClipBody.outputs.videocloud.video
      description: >-
        'An object containing inputs for Video Cloud video object creation - see the [CMS API Reference](https://brightcovelearning.github.io/Brightcove-API-References/cms-api/v1/doc/swagger.html#operations-Videos-CreateVideo)'
      type: object
    CreateVodClipbody.outputs.videocloud.video.cuePoint:
      properties:
        force-stop:
          description: whether video is force-stopped at the cue point
          type: boolean
        metadata:
          description: optional metadata string (512 single-byte characters maximum)
          type: string
        name:
          description: cue point name
          type: string
        time:
          description: 'time of the cue point in seconds; example: 10.527'
          type: number
        type:
          description: cue point type
          enum:
            - AD
            - CODE
          example: AD
          type: string
      required:
        - time
        - type
      title: Create_VOD_ClipBody.outputs.videocloud.video.cue_point
      type: object
    CreateVodClipbody.outputs.videocloud.video.geo:
      properties:
        countries:
          description: >-
            array of ISO 3166 list of 2-letter codes(https://www.iso.org/obp/ui/#home) (search for &quot;country codes&quot;)
          type: string
        exclude_countries:
          description: >-
            if true, country array is treated as a list of countries excluded from viewing
          type: boolean
        restricted:
          description: whether geo-restriction is enabled for this video
          type: boolean
      required:
        - countries
        - exclude_countries
        - restricted
      title: Create_VOD_ClipBody.outputs.videocloud.video.geo
      type: object
      description: map of geo-filtering properties
    CreateVodClipbody.outputs.videocloud.video.schedule:
      properties:
        ends_at:
          description: >-
            end date-time of availability in
            ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15)
            format
          type: string
        starts_at:
          description: >-
            'start date-time of availability in ISO-8601(http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15) format'
          type: string
      required:
        - ends_at
        - starts_at
      title: Create_VOD_ClipBody.outputs.videocloud.video.schedule
      type: object
      description: map of scheduling properties
    CreateVodJobResponse:
      properties:
        vod_jobs:
          type: array
          items:
            type: object
            properties:
              jvod_id:
                type: string
                description: VOD job id
                readOnly: true
                example: 62989518f9294e19b2f7e184e8141d72
              label:
                type: string
                description: Label for the job set in the input field
                example: first 30 secs of live job
        live_job_id:
          type: string
          description: The id of the live job
          readOnly: true
          example: 3ae7fa89943f4a96aa273fbbf175d527
      title: Create VOD Job Response
      type: object
    CreateRTMPOutputRequestBody:
      title: Create RTMP Output Request Body
      description: Request body for requests to create an RTMP output
      type: object
      properties:
        url:
          type: string
          description: URL for the RTMP output
          example: 'rtmp://host:port/application/streamName'
        output_label:
          type: string
          description: >-
            The label of the job output to use as the source for the RTMP output. Omit this parameter to simply forward the RTMP input instead.
      required:
        - url
    CreateRTMPOutputResponse:
      title: Create RTMP output success response
      description: Create RTMP output success response
      type: object
      properties:
        connection_info:
          type: object
          description: Information on the connection URL
          properties:
            host:
              type: string
              description: Host URL
            port:
              type: integer
              description: The port number
            application:
              type: string
              description: The application name in the path
            streamName:
              type: string
              description: The stream name in the path
        duration_history:
          type: array
          description: Array of durations for connections
          items:
            type: integer
            description: A connection duration in seconds
        rtmp_out_id:
          type: string
          description: System id for the RTMP output
        stream_start:
          type: integer
          description: Time of the stream start in Epoch time (milliseconds)
      example: {
          "connection_info": {
            "host": "live-api-s.facebook.com",
            "port": 80,
            "application": "rtmp",
            "streamName": "foo-bar"
          },
          "duration_history": [],
          "rtmp_out_id": "foo",
          "stream_start": 1542731746032
        }
    Credentials:
      properties:
        credential_default_for_type:
          description: The clip label (from the input)
          type: boolean
        credential_id:
          description: The credential id
          type: string
        credential_private:
          description: >-
            The private key for the credential (not shown; represented by
            asterisks)
          type: string
        credential_public:
          description: The public key for the credential
          type: string
        label:
          description: The label used to reference the credential in requests
          type: string
        type:
          description: The credential type
          enum:
            - ftp
            - http
            - oauth
            - rtmp
            - s3
            - videocloud
            - zencoder
          x-enum-elements:
            - name: ftp
              description: credentials for FTP site where clips should be sent
            - name: http
              description: >-
                basic authorization credentials for an http address to send notifications to
            - name: oauth
              description: >-
                credentials for OAuth2 authentication required for the address
                where notifications are to be sent
            - name: rtmp
              description: >-
                add authentication to the endpoint your encoder connects to, so that anyone who has the RTMP URL can't just connect
            - name: s3
              description: authentication for your S3 bucket to send clips to
            - name: videocloud
              description: authentication for your Video Cloud account to send clips to
            - name: zendcoder
              description: authentication for your Zencoder account to send clips to
          type: string
        user_id:
          description: The user id
          type: string
      required:
        - credential_default_for_type
        - user_id
        - credential_private
        - type
        - label
        - credential_id
        - credential_public
      title: credentials
      type: object
    CuePoint:
      properties:
        accuracy:
          description: The cuepoint insertion accuracy - may be segment or frame
          type: string
        duration:
          description: The cuepoint duration in seconds
          type: number
        id:
          description: The cuepoint id
          type: string
        inserted_at:
          description: Time when the cue point was inserted in the stream
          type: string
      required:
        - id
        - duration
        - accuracy
        - inserted_at
      title: cue_point
      type: object
    DeactivateSepStreamResponse:
      properties:
        id:
          description: The job id for the stream that was Deactivated
          type: string
      required:
        - id
      title: Deactivate_SEP_Stream_Response
      type: object
    DeleteAdConfigurationResponse:
      properties:
        application_id:
          description: The ad application id
          type: string
        deleted:
          description: Confirmation of deletion
          type: boolean
      required:
        - application_id
        - deleted
      title: Delete_Ad_Configuration_Response
      type: object
    DeleteBeaconSetResponse:
      properties:
        beacon_set_id:
          description: The beacon set id
          type: string
        deleted:
          description: Whether the beacon set was deleted successfully
          type: boolean
      required:
        - beacon_set_id
        - deleted
      title: Delete_beacon_set_Response
      type: object
    DeleteSlateMediaSourceAssetResponse:
      properties:
        account_id:
          description: Id for the account
          type: string
        media_source_asset_default:
          description: Whether this is the default media source asset
          type: boolean
        media_source_asset_id:
          description: Id for the slate asset
          type: string
        media_source_asset_status:
          description: Current status of the ingestion of the media asset
          type: string
        media_source_asset_type:
          description: The media asset type
          type: string
        media_source_asset_url:
          description: URL for the media asset to be ingested
          type: string
      required:
        - media_source_asset_id
        - account_id
        - media_source_asset_default
        - media_source_asset_type
        - media_source_asset_url
        - media_source_asset_status
      title: Delete_Slate_Media_Source_Asset_Response
      type: object
    GetSlateMediaSourceAssetsResponse:
      properties:
        account_id:
          description: Id for the Live account
          type: string
        media_source_asset_default:
          description: Whether this is the default media source asset
          type: boolean
        media_source_asset_description:
          description: User identifiable description for the slate
          type: string
        media_source_asset_id:
          description: Id for the slate asset
          type: string
        media_source_asset_status:
          description: Current status of the ingestion of the media asset
          type: string
        media_source_asset_type:
          description: The media asset type
          type: string
        media_source_asset_url:
          description: URL for the media asset to be ingested
          type: string
      required:
        - media_source_asset_id
        - account_id
        - media_source_asset_description
        - media_source_asset_default
        - media_source_asset_type
        - media_source_asset_url
        - media_source_asset_status
      title: Get_Slate_Media_Source_Assets_Response
      type: object
    Id3Tag:
      properties:
        tag_name:
          description: The ID3 tag name
          type: string
        tag_value:
          description: The ID3 tag value
          type: string
      required:
        - tag_name
        - tag_value
      title: id3_tag
      type: object
    IngestSlateMediaSourceAssetResponse:
      properties:
        account_id:
          description: Id for the account
          type: string
        media_source_asset_default:
          description: Whether this is the default media source asset
          type: boolean
          readOnly: true
        media_source_asset_description:
          description: User identifiable description for the slate
          type: string
        media_source_asset_id:
          description: Id for the slate asset
          type: string
          readOnly: true
        media_source_asset_status:
          description: Current status of the ingestion of the media asset
          type: string
          readOnly: true
        media_source_asset_type:
          description: The media asset type
          type: string
        media_source_asset_url:
          description: URL for the media asset to be ingested
          type: string
      title: Ingest_Slate_Media_Source_Asset_Response
      type: object
    IngestSlateMediaSourceAssetbody:
      properties:
        account_id:
          description: 'The Live account id (if left blank, the request will still work)'
          type: string
        source_description:
          description: User identifiable description for the slate
          type: string
        source_url:
          description: URL for the slate to ingest
          type: string
      required:
        - source_url
        - account_id
      title: Ingest_Slate_Media_Source_AssetBody
      type: object
    InsertId3TimedMetadataResponse:
      properties:
        id:
          description: The job id
          type: string
        id3_tag:
          $ref: '#/components/schemas/Id3Tag'
      required:
        - id
        - id3_tag
      title: Insert_ID3_timed_metadata_Response
      type: object
    InsertId3TimedMetadatabody:
      properties:
        id3_tag:
          $ref: '#/components/schemas/InsertId3TimedMetadatabody.id3Tag'
      required:
        - id3_tag
      title: Insert_ID3_timed_metadataBody
      type: object
      example: {
          "id3_tag": {
            "name": "BCOV",
            "value": "my value",
            "timecode": "15:50:49:16"
          }
        }
    InsertId3TimedMetadatabody.id3Tag:
      description: An object containing variables for the ID3 timed metadata
      properties:
        name:
          description: A name for the tag
          type: string
        timecode:
          description: |-
            Time to insert - by default, insertion is immediate.

            Note:
            1. If you use the timecode property, the job only only stores the most
            recent request for insertion;
            2. If you use the timecode property, the encoder must be sending SMPTE-formatted (HH:MM:SS:FF) timecode stored in the `tc` property via `OnFI`;
            3. Software encoders such as Wirecast and OBS do not support the sending timecode via `OnFI` packets in the RTMP stream;
            4. Elemental hardware encoders do support the sending timecode via `OnFI` packets in the RTMP stream
          type: string
        value:
          description: A value for the tag (maximum string data size 256KB)
          type: string
      required:
        - name
        - value
      title: Insert_ID3_timed_metadataBody.id3_tag
      type: object
    Job:
      properties:
        ad_insertion:
          description: Indicates whether SSAI is enabled
          type: boolean
        created_at:
          description: ISO 8601 date-time string representing when the job was created
          type: string
        event_length:
          description: >-
            Used to preset and define an end time for the live event. At any point within the specified event_length you may reconnect to your stream. The event_length setting goes into effect as soon as streaming begins.
          type: number
        finished_at:
          description: >-
            ISO 8601 date-time string representing when the live stream was stopped
          type: string
        id:
          description: The live job id
          type: string
        input_media_file:
          $ref: '#/components/schemas/Job.inputMediaFile'
        live_stream:
          description: Indicates whether this is a live stream or VOD
          type: boolean
        output_media_files:
          description: Array of objects containing properties for the output media files
          items:
            $ref: '#/components/schemas/Job.outputMediaFiles'
          type: array
        playback_url:
          description: Playback URL for the live stream
          type: string
        playback_url_dvr:
          description: Playback URL for the live DVR
          type: string
        reconnect_time:
          description: >-
            The time, in seconds, that the system will wait for a stream to
            reconnect to the encoder
          example: 1800
          type: number
        region:
          description: The Amazon AWS region to use for encoding the job
          enum:
            - us-west-2
            - us-east-1
            - ap-southeast-2
            - ap-northeast-1
            - ap-southeast-1
            - eu-central-1
            - eu-west-1
            - sa-east-1
          example: us-west-2
          type: string
        randomize_chunk_url:
          type: boolean
          description: >-
            If true, HLS segments will be scrambled to prevent your stream from being stolen and reused
          default: true
        rtmp_outputs:
          type: array
          description: >-
            '[RTMP outputs](https://support.brightcove.com/live-api-rtmp-outputs) for the job'
          items:
            $ref: '#/components/schemas/RTMPout'
          example: [
              {
                "rtmp_out_id": "asdfg-lkjh",
                "stream_start": 1538746255247,
                "connection_info": {
                  "host": "a.rtmp.youtube.com",
                  "port": 1935,
                  "application": "live2",
                  "streamName": "myStream",
                  "sessionStatus": "Active"
                }
              }
            ]
        slate:
          description: id for a slate of assets included
          type: string
        state:
          description: >-
            The current state of the job.

            Possible values for **Live
            jobs** are:
              - `error` (An error has occurred; the job will not be processed.)
              - `standby` ([Only applicable to Static Entry Point jobs.; The job is allocated and ready for activation.)
              - `waiting` (The job has been assigned to a streaming worker and ready for the encoder to connect.)
              - `processing` (The encoder is connected and the job is available for playback.)
              - `disconnected` (The encoder has disconnected and the streaming worker is waiting for a reconnection.)
              - `finishing` (The encoder has been disconnected for more than `reconnect_time`, and streaming worker is stopping the jobs and creating any associated VOD outputs.)
              - `finished` (The job has finished successfully.)
              - `cancelling` (The job has been cancelled and the worker is stopping the job and will NOT process any pending VOD outputs.)
              - `cancelled` (The job has been cancelled successfully.)
              - `failed` (The job has stopped as a result of a system error.)
          type: string
          enum:
            - standby
            - waiting
            - processing
            - disconnected
            - finishing
            - finished
            - cancelling
            - cancelled
            - failed
            - waiting_finish_live
            - creating_asset
        sep_state:
          type: string
          description: |-
            Current state of an SEP job.

            Possible states:
              * `none` (not an SEP job)
              * `ready`	(The entry point has been activated and ready for the encoder to connect)
              * `pending_activation` (The entry point has been queued for streaming worker assignment.)
              * `activation_in_progress`	(The entry point is updating to route connections to the streaming worker.)
              * `pending_deactivation`	(The entry point has been queued for cleanup from the streaming worker.)
              * `deactivation_in_progress`	(The entry point is disconnecting from the streaming worker.)
              * `cancelled`	(The entry point has been cancelled.)
              * `finished`	(The entry point has completed successfully.)
          enum:
            - none
            - ready
            - pending_activation
            - activation_in_progress
            - pending_deactivation
            - deactivation_in_progress
            - cancelled
            - finished
        ssai_state:
          type: string
          description: |-
            Current state of an SSAI job.

            Possible states:
              * `none` (not an SSAI job)
              * `waiting_input`	(The streaming worker is waiting for the encoder to connect and provide the stream input information.)
              * `start_transcoding`	(The encoder has connected and the SSAI slate has been queued for transcoding based on the stream input data and outputs data.)
              * `transcoding`	(The slate is being transcoded.)
              * `error`	(The slate could not be downloaded or transcoded.)
              * `ready`	(The slate has been generated and the job is ready for SSAI playback.)
            enum:
              - none
              - waiting_input
              - start_transcoding
              - transcoding
              - error
              - ready
        state_history:
          description: A history of state changes for a job
          type: array
          items:
            type: object
            properties:
              state:
                description: >-
                  The current state of the job.

                  Possible values for **Live
                  jobs** are:
                    - `error` (An error has occurred; the job will not be processed.)
                    - `standby` ([Only applicable to Static Entry Point jobs.; The job is allocated and ready for activation.)
                    - `waiting` (The job has been assigned to a streaming worker and ready for the encoder to connect.)
                    - `processing` (The encoder is connected and the job is available for playback.)
                    - `disconnected` (The encoder has disconnected and the streaming worker is waiting for a reconnection.)
                    - `finished` (The job has finished successfully.)
                    - `cancelling` (The job has been cancelled and the worker is stopping the job and will NOT process any pending VOD outputs.)
                    - `cancelled` (The job has been cancelled successfully.)
                    - `failed` (The job has stopped as a result of a system error.)
                type: string
                enum:
                  - error
                  - standby
                  - waiting
                  - processing
                  - disconnected
                  - finishing
                  - finished
                  - cancelling
                  - cancelled
                  - failed
                  - waiting_finish_live
                  - creating_asset
              transition_timestamp:
                description: >-
                  Time when the transition to that state occurred in Epoch
                  (UNIX) time
                type: integer
        stream:
          $ref: '#/components/schemas/Job.stream'
        submitted_at:
          description: ISO 8601 date-time string representing when the job was submitted
          type: string
        updated_at:
          description: >-
            ISO 8601 date-time string representing when the job was last
            modified
          type: string
      required:
        - region
        - reconnect_time
        - event_length
        - live_stream
        - ad_insertion
        - input_media_file
        - slate
        - stream
        - output_media_files
      title: job
      type: object
      example: {
          "job": {
            "created_at": "2018-09-05T12:19:29.826Z",
            "finished_at": null,
            "id": "3ae7fa89943f4a96aa273fbbf175d527",
            "privacy": false,
            "state": "disconnected",
            "ssai_state": "none",
            "sep_state": "none",
            "submitted_at": "2018-09-05T12:19:29.826Z",
            "test": false,
            "updated_at": "2018-09-05T12:35:26.757Z",
            "region": "us-west-2",
            "reconnect_time": 7200,
            "live_stream": true,
            "static": false,
            "ad_insertion": false,
            "metadata_passthrough": false,
            "out_worker_bytes": 423753,
            "out_worker_bytes_rate": 318,
            "channel_type": "event",
            "state_history": [
              {
                "state": "disconnected",
                "transition_timestamp": 1536150926757
              },
              {
                "state": "processing",
                "transition_timestamp": 1536150914004
              }
            ],
            "state_history_is_truncated": false,
            "job_videocloud_asset_id": "5831009084001",
            "live_dvr_sliding_window_duration_ms": 86400000,
            "notifications": [
              "http://solutions.brightcove.com/bcls/live/live-callbacks.php"
            ],
            "outputs": [
              {
                "video_codec": "h264",
                "keyframe_interval": 60,
                "live_stream": true,
                "segment_seconds": 6,
                "width": 1920,
                "h264_profile": "main",
                "rtmp_credentials": "rtmp-1",
                "label": "hls1080p",
                "video_bitrate": 2400,
                "notifications": [
                  "http://solutions.brightcove.com/bcls/live/live-callbacks.php"
                ],
                "height": 1080
              },
              {
                "video_codec": "h264",
                "keyframe_interval": 60,
                "live_stream": true,
                "segment_seconds": 6,
                "width": 1280,
                "h264_profile": "main",
                "label": "hls720p",
                "video_bitrate": 1843,
                "notifications": [
                  "http://solutions.brightcove.com/bcls/live/live-callbacks.php"
                ],
                "height": 720
              }
            ],
            "videocloud": {
              "video": {
                "name": "test_live_3"
              }
            },
            "randomize_chunk_url": true,
            "playback_url": "https://bcovlive-a.akamaihd.net/3ae7fa89943f4a96aa273fbbf175d527/us-west-2/NA/playlist.m3u8",
            "playback_url_dvr": "https://bcovlive-a.akamaihd.net/3ae7fa89943f4a96aa273fbbf175d527/us-west-2/NA/playlist_dvr.m3u8",
            "encryption": {

            },
            "input_media_file": {
              "audio_bitrate_in_kbps": null,
              "audio_codec": null,
              "audio_sample_rate": null,
              "audio_tracks": null,
              "channels": null,
              "created_at": "2018-09-05T12:19:29.826Z",
              "duration_in_ms": 1242901,
              "error_class": null,
              "error_message": null,
              "file_size_bytes": null,
              "finished_at": null,
              "format": null,
              "frame_rate": null,
              "height": null,
              "id": "input-3ae7fa89943f4a96aa273fbbf175d527",
              "md5_checksum": null,
              "privacy": false,
              "state": "disconnected",
              "test": false,
              "updated_at": "2018-09-05T12:35:26.757Z",
              "video_bitrate_in_kbps": null,
              "video_codec": null,
              "width": null,
              "total_bitrate_in_kbps": null,
              "url": null
            },
            "stream": {
              "created_at": "2018-09-05T12:22:53.630Z",
              "finished_at": null,
              "height": null,
              "id": "stream-3ae7fa89943f4a96aa273fbbf175d527",
              "name": "alive",
              "protocol": null,
              "state": null,
              "test": false,
              "updated_at": "2018-09-05T12:35:26.757Z",
              "width": null,
              "total_bitrate_in_kbps": null,
              "duration": 1242.901,
              "region": "us-west-2",
              "url": "rtmp://ec2-18-237-16-155.us-west-2.compute.amazonaws.com:1935/3ae7fa89943f4a96aa273fbbf175d527",
              "location": {
                "source": {
                  "latitude": null,
                  "longitude": null,
                  "location": null
                },
                "destination": {
                  "latitude": null,
                  "longitude": null,
                  "location": null
                },
                "distance": null
              },
              "in_worker_bytes": 457665,
              "in_worker_bytes_rate": 325
            },
            "output_media_files": [
              {
                "audio_bitrate_in_kbps": 196.608,
                "audio_codec": "AAC",
                "audio_sample_rate": null,
                "channels": null,
                "created_at": "2018-09-05T12:19:29.826Z",
                "duration_in_ms": 1242901,
                "error_class": null,
                "error_message": null,
                "file_size_bytes": null,
                "finished_at": null,
                "format": null,
                "fragment_duration_in_ms": null,
                "frame_rate": null,
                "height": 1080,
                "id": "0-3ae7fa89943f4a96aa273fbbf175d527",
                "md5_checksum": null,
                "privacy": false,
                "rfc_6381_audio_codec": null,
                "rfc_6381_video_codec": null,
                "state": "disconnected",
                "test": false,
                "updated_at": "2018-09-05T12:35:26.757Z",
                "video_bitrate_in_kbps": 2457.6,
                "video_codec": "H.264",
                "video_codec_profile": "main",
                "width": 1920,
                "label": "hls1080p",
                "total_bitrate_in_kbps": 2654.208,
                "keyframe_interval": 60,
                "keyframe_interval_follow_source": false,
                "segment_seconds": 6,
                "live_stream": true,
                "playback_url": "https://bcovlive-a.akamaihd.net/3ae7fa89943f4a96aa273fbbf175d527/us-west-2/NA/profile_0/chunklist.m3u8",
                "playback_url_dvr": "https://bcovlive-a.akamaihd.net/3ae7fa89943f4a96aa273fbbf175d527/us-west-2/NA/profile_0/chunklist_dvr.m3u8",
                "playback_url_vod": "https://bcovlive-a.akamaihd.net/3ae7fa89943f4a96aa273fbbf175d527/us-west-2/NA/profile_0/chunklist_vod.m3u8",
                "playback_added_cdns": [

                ]
              },
              {
                "audio_bitrate_in_kbps": 196.608,
                "audio_codec": "AAC",
                "audio_sample_rate": null,
                "channels": null,
                "created_at": "2018-09-05T12:19:29.826Z",
                "duration_in_ms": 1242901,
                "error_class": null,
                "error_message": null,
                "file_size_bytes": null,
                "finished_at": null,
                "format": null,
                "fragment_duration_in_ms": null,
                "frame_rate": null,
                "height": 720,
                "id": "1-3ae7fa89943f4a96aa273fbbf175d527",
                "md5_checksum": null,
                "privacy": false,
                "rfc_6381_audio_codec": null,
                "rfc_6381_video_codec": null,
                "state": "disconnected",
                "test": false,
                "updated_at": "2018-09-05T12:35:26.757Z",
                "video_bitrate_in_kbps": 1887.232,
                "video_codec": "H.264",
                "video_codec_profile": "main",
                "width": 1280,
                "label": "hls720p",
                "total_bitrate_in_kbps": 2083.84,
                "keyframe_interval": 60,
                "keyframe_interval_follow_source": false,
                "segment_seconds": 6,
                "live_stream": true,
                "playback_url": "https://bcovlive-a.akamaihd.net/3ae7fa89943f4a96aa273fbbf175d527/us-west-2/NA/profile_1/chunklist.m3u8",
                "playback_url_dvr": "https://bcovlive-a.akamaihd.net/3ae7fa89943f4a96aa273fbbf175d527/us-west-2/NA/profile_1/chunklist_dvr.m3u8",
                "playback_url_vod": "https://bcovlive-a.akamaihd.net/3ae7fa89943f4a96aa273fbbf175d527/us-west-2/NA/profile_1/chunklist_vod.m3u8",
                "playback_added_cdns": [

                ]
              }
            ]
          }
        }
    Job.inputMediaFile:
      properties:
        audio_bitrate_in_kbps:
          description: Audio bitrate of the input media file
          type: number
        audio_codec:
          description: Audio codec of the input media file
          type: string
        audio_sample_rate:
          description: Audio sample rate of the input media file
          type: number
        audio_tracks:
          description: The number of audio tracks
          type: number
        channels:
          description: The number of audio channels
          type: number
        created_at:
          description: >-
            ISO 8601 date-time string representing when the input file was
            created
          type: string
        duration_in_ms:
          description: duration_in_ms.
          type: number
        error_class:
          description: Type of error thrown
          type: string
        error_message:
          description: Error message thrown
          type: string
        file_size_bytes:
          description: File size
          type: number
        finished_at:
          description: >-
            ISO 8601 date-time string representing when the input file was
            finished
          type: string
        format:
          description: Format of the input file
          type: string
        frame_rate:
          description: Frame rate of the input file
          type: number
        height:
          description: Frame height of the input file
          type: number
        id:
          description: System id of the input file
          type: string
        md5_checksum:
          description: Checksum for the input file
          type: string
        state:
          description: Current state of input file processing
          type: string
        total_bitrate_in_kbps:
          description: Total bitrate of the input media file
          type: number
        updated_at:
          description: >-
            ISO 8601 date-time string representing when the input file was last
            modified
          type: string
        url:
          description: URL for the input media file
          type: string
        video_bitrate_in_kbps:
          description: Video bitrate of the input media file
          type: number
        video_codec:
          description: Video codec of the input media file
          type: string
        width:
          description: Frame width of the input media file
          type: number
      title: job.input_media_file
      type: object
      description: Object containing properties for the input media file
    Job.outputMediaFiles:
      properties:
        audio_bitrate_in_kbps:
          description: Audio bitrate of the output media file
          type: number
        audio_codec:
          description: Audio codec of the output media file
          type: string
        audio_sample_rate:
          description: Audio sample rate of the output media file
          type: number
        audio_tracks:
          description: The number of audio tracks
          type: number
        channels:
          description: The number of audio channels
          type: number
        created_at:
          description: >-
            ISO 8601 date-time string representing when the output file was
            created
          type: string
        duration_in_ms:
          description: >-
            ISO 8601 date-time string representing when the output file was
            created
          type: number
        dvr_filename:
          description: File name for the DVR playlist manifest
          type: string
        error_class:
          description: Type of error thrown
          type: string
        error_message:
          description: Error message thrown
          type: string
        file_size_bytes:
          description: File size
          type: number
        filename:
          description: File name for the playlist manifest
          type: string
        finished_at:
          description: >-
            ISO 8601 date-time string representing when the output file was
            finished
          type: string
        format:
          description: Format of the output file
          type: string
        frame_rate:
          description: Frame rate of the output file
          type: number
        height:
          description: Frame height of the output file
          type: number
        id:
          description: System id of the output file
          type: string
        keyframe_interval:
          description: Keyframe interval for the output media file
          format: int32
          type: integer
        keyframe_interval_follow_source:
          description: Whether keyframe rate for the output matches the source
          type: boolean
        live_stream:
          description: Whether the output is a live stream
          type: boolean
        md5_checksum:
          description: Checksum for the output file
          type: string
        playback_url:
          description: URL for the output file
          type: string
        playback_url_dvr:
          description: Live DVR url for live stream output
          type: string
        playback_url_vod:
          description: URL for VOD output
          type: string
        playlist_type:
          description: Playlist type for playlist output
          type: string
        state:
          description: Current state of output file processing
          type: string
        total_bitrate_in_kbps:
          description: Total bitrate of the output media file
          type: number
        type:
          description: Will be playlist for playlist output
          type: string
        updated_at:
          description: >-
            ISO 8601 date-time string representing when the output file was last
            modified
          type: string
        video_bitrate_in_kbps:
          description: Video bitrate of the output media file
          type: number
        video_codec:
          description: Video codec of the output media file
          type: string
        width:
          description: Frame width of the output media file
          type: number
      required:
        - audio_bitrate_in_kbps
        - audio_codec
        - audio_sample_rate
        - audio_tracks
        - channels
        - duration_in_ms
        - file_size_bytes
        - format
        - frame_rate
        - height
        - video_bitrate_in_kbps
        - video_codec
        - width
        - total_bitrate_in_kbps
        - keyframe_interval_follow_source
        - live_stream
        - type
        - filename
        - dvr_filename
      title: job.output_media_files
      type: object
    Job.stream:
      properties:
        created_at:
          description: ISO 8601 date-time string representing when the stream was created
          type: string
        destination:
          $ref: '#/components/schemas/Job.stream.destination'
        duration:
          description: ISO Duration of the stream in seconds
          type: number
        finished_at:
          description: ISO 8601 date-time string representing when the stream was finished
          type: string
        height:
          description: Frame height of the stream
          type: number
        id:
          description: System id of the stream
          type: string
        location:
          $ref: '#/components/schemas/Job.stream.location'
        name:
          description: Name of the stream
          type: string
        protocol:
          description: Protocol of the stream
          type: string
        region:
          description: AWS region list specified for the account
          type: string
        total_bitrate_in_kbps:
          description: Total bitrate of the stream
          type: number
        updated_at:
          description: >-
            ISO 8601 date-time string representing when the stream was last
            modified
          type: string
        url:
          description: URL for the stream
          type: string
        video_bitrate_in_kbps:
          description: Video bitrate of the input media file
          type: number
        video_codec:
          description: Video codec of the input media file
          type: string
        width:
          description: Frame width of the stream
          type: number
      title: job.stream
      type: object
      description: Object containing properties for the live stream
    Job.stream.destination:
      properties:
        latitude:
          description: Latitude of the location source
          type: string
        location:
          description: Longitude of the location source
          type: string
        longitude:
          description: Longitude of the location source
          type: string
      title: job.stream.destination
      type: object
      description: Object representing the destination of the stream
    Job.stream.location:
      properties:
        latitude:
          description: Latitude of the location source
          type: string
        location:
          description: Longitude of the location source
          type: string
        longitude:
          description: Longitude of the location source
          type: string
      title: job.stream.location
      type: object
      description: Object representing the location of the stream
    ListCredentials:
      properties:
        Array:
          description: of credentials objects
          items:
            $ref: '#/components/schemas/Credentials'
          type: array
      required:
        - Array
      title: List_Credentials200
      type: object
    ListLiveJobsResponse:
      properties:
        jobs:
          description: >-
            The filtered list of jobs.  List may be empty if no matching jobs or
            for last page.
          items:
            $ref: '#/components/schemas/Job'
          type: array
        next_token:
          description: >-
            Use as start_token to fetch next page.  Not include if no more
            matching jobs.
          type: string
        start_token:
          description: >-
            Returns start_token from current request (not included on first
            page).
          type: string
      required:
        - start_token
        - jobs
      title: List_Live_Jobs200
      type: object
      example: {
          "next_token": "eyJhY2NvdW50X2lkIjoiYTk1YWM1ODE1NTFiNDQ3OGIyNzkxMGU1Njc1ZGIxZjgiLCJqb2JfaWQiOiI5NTA2NGI0Mjc0ZTI0M2Y0ODE0ZGQ2OTcxYTNjMmRkNyIsImpvYl9jcmVhdGVkX2F0IjoxNTI2MjQzNDgyNzEzfQ==",
          "jobs":
          [
            {
              "created_at": "2018-04-03T12:28:09.579Z",
              "finished_at": "2018-04-03T12:59:16.871Z",
              "id": "c1d242de729d4a76a605e018cc101601",
              "privacy": false,
              "state": "finished",
              "ssai_state": "none",
              "sep_state": "finished",
              "submitted_at": "2018-04-03T12:28:09.579Z",
              "test": false,
              "updated_at": "2018-04-03T12:59:16.871Z",
              "region": "eu-west-1",
              "reconnect_time": 20,
              "live_stream": true,
              "static": false,
              "ad_insertion": false,
              "metadata_passthrough": false,
              "out_worker_bytes": 0,
              "out_worker_bytes_rate": 0,
              "channel_type": "event",
              "live_dvr_sliding_window_duration_ms": 30000,
              "outputs":
              [
                {
                  "video_codec": "h264",
                  "keyframe_interval": 60,
                  "live_stream": true,
                  "segment_seconds": 6,
                  "width": 1920,
                  "h264_profile": "main",
                  "label": "hls1080p",
                  "video_bitrate": 2400,
                  "height": 1080
                }
              ],
              "randomize_chunk_url": true,
              "playback_url": "https://bcovlive-a.akamaihd.net/c1d242de729d4a76a605e018cc101601/eu-west-1/NA/playlist.m3u8",
              "playback_url_dvr": "https://bcovlive-a.akamaihd.net/c1d242de729d4a76a605e018cc101601/eu-west-1/NA/playlist_dvr.m3u8",
              "encryption":
              {},
              "input_media_file":
              {
                "audio_bitrate_in_kbps": null,
                "audio_codec": null,
                "audio_sample_rate": null,
                "audio_tracks": null,
                "channels": null,
                "created_at": "2018-04-03T12:28:09.579Z",
                "duration_in_ms": 1522760356871,
                "error_class": null,
                "error_message": null,
                "file_size_bytes": null,
                "finished_at": "2018-04-03T12:59:16.871Z",
                "format": null,
                "frame_rate": null,
                "height": null,
                "id": "input-c1d242de729d4a76a605e018cc101601",
                "md5_checksum": null,
                "privacy": false,
                "state": "finished",
                "test": false,
                "updated_at": "2018-04-03T12:59:16.871Z",
                "video_bitrate_in_kbps": null,
                "video_codec": null,
                "width": null,
                "total_bitrate_in_kbps": null,
                "url": null
              },
              "stream":
              {
                "created_at": null,
                "finished_at": "2018-04-03T12:59:16.871Z",
                "height": null,
                "id": "stream-c1d242de729d4a76a605e018cc101601",
                "name": "alive",
                "protocol": null,
                "state": null,
                "test": false,
                "updated_at": null,
                "width": null,
                "total_bitrate_in_kbps": null,
                "duration": 1522760356.871,
                "region": "eu-west-1",
                "url": "rtmp://ep3-euw1.bcovlive.io:1935/c1d242de729d4a76a605e018cc101601",
                "location":
                {
                  "source":
                  {
                    "latitude": null,
                    "longitude": null,
                    "location": null
                  },
                  "destination":
                  {
                    "latitude": null,
                    "longitude": null,
                    "location": null
                  },
                  "distance": null
                },
                "in_worker_bytes": 0,
                "in_worker_bytes_rate": 0
              },
              "output_media_files":
              [
                {
                  "audio_bitrate_in_kbps": 196.608,
                  "audio_codec": "AAC",
                  "audio_sample_rate": null,
                  "channels": null,
                  "created_at": "2018-04-03T12:28:09.579Z",
                  "duration_in_ms": 1522760356871,
                  "error_class": null,
                  "error_message": null,
                  "file_size_bytes": null,
                  "finished_at": "2018-04-03T12:59:16.871Z",
                  "format": null,
                  "fragment_duration_in_ms": null,
                  "frame_rate": null,
                  "height": 1080,
                  "id": "0-c1d242de729d4a76a605e018cc101601",
                  "md5_checksum": null,
                  "privacy": false,
                  "rfc_6381_audio_codec": null,
                  "rfc_6381_video_codec": null,
                  "state": "finished",
                  "test": false,
                  "updated_at": "2018-04-03T12:59:16.871Z",
                  "video_bitrate_in_kbps": 2457.6,
                  "video_codec": "H.264",
                  "video_codec_profile": "main",
                  "width": 1920,
                  "label": "hls1080p",
                  "total_bitrate_in_kbps": 2654.208,
                  "keyframe_interval": 60,
                  "keyframe_interval_follow_source": false,
                  "segment_seconds": 6,
                  "live_stream": true,
                  "playback_url": "https://bcovlive-a.akamaihd.net/c1d242de729d4a76a605e018cc101601/eu-west-1/NA/profile_0/chunklist.m3u8",
                  "playback_url_dvr": "https://bcovlive-a.akamaihd.net/c1d242de729d4a76a605e018cc101601/eu-west-1/NA/profile_0/chunklist_dvr.m3u8",
                  "playback_url_vod": "https://bcovlive-a.akamaihd.net/c1d242de729d4a76a605e018cc101601/eu-west-1/NA/profile_0/chunklist_vod.m3u8",
                  "playback_added_cdns":
                  []
                }
              ]
            }
          ]
        }
    ListRTMPOutputs:
      title: List RMTP Outputs
      description: >-
        Response to GET request for RTMP outputs - array of RTMP outputs objects
      type: array
      items:
        $ref: '#/components/schemas/RTMPout'
      example: [
          {
            "rtmp_out_id": "asdfg-lkjh",
            "stream_start": 1538746255247,
            "connection_info": {
              "host": "a.rtmp.youtube.com",
              "port": 1935,
              "application": "live2",
              "streamName": "myStream",
              "sessionStatus": "Active"
            },
            "duration_history": [
              {
                "stream_start": 1557933191000,
                "stream_end": 1557936731000
              }
            ],
            "waiting_for_start": false
          }
        ]
    RTMPout:
      title: RTMP Output
      type: object
      description: RTMP output object
      properties:
        rtmp_out_id:
          type: string
          description: system id for the RTMP output
        stream_start:
          type: integer
          description: Start time of the output in Epoch time (milliseconds)
        state:
          type: string
          description: Current state of the RTMP output stream
          enum:
            - connected
            - disconnected
            - error
            - starting
        duration_history:
          type: array
          description: Array of durations for connections
          items:
            type: object
            description: >-
              A connection start and stop
            properties:
              stream_start:
                type: integer
                description: >-
                  The epoch time (in milliseconds) that a stream connected
              stream_end:
                type: integer
                description: >-
                  The epoch time (in milliseconds) that a stream disconnected
        connection_info:
          type: object
          description: Details of the connection information
          properties:
            host:
              type: string
              description: Host URL
            port:
              type: integer
              description: The port number
            application:
              type: string
              description: The application name in the path
            streamName:
              type: string
              description: The stream name in the path
            sessionStatus:
              type: string
              description: The current session status
              enum:
                - Active
                - Inactive
        waiting_for_start:
          type: boolean
          description: |-
            For SEP jobs. If `true`, the SEP job was deactivated but the RTMP output was not stopped and the next time you activate the stream on the SEP job there will be an attempt to reconnect the RTMP output.

            If `waiting_for_start` is `false`, it means the RTMP output was stopped.
    ListVodJobs:
      properties:
        next_token:
          description: >-
            Use as start_token to fetch next page.  Not include if no more
            matching jobs.
          type: string
        start_token:
          description: >-
            Returns start_token from current request (not included on first
            page).
          type: string
        vod_jobs:
          description: >-
            The filtered list of jobs.  List may be empty if no matching jobs or
            for last page.
          items:
            $ref: '#/components/schemas/VodJobs2'
          type: array
      required:
        - start_token
        - vod_jobs
      title: List_Live_Jobs200
      type: object
      example: {
          "jvod_state": "processing",
          "jvod_progress": "Chunklist-download-error",
          "job_id": "3ae7fa89943f4a96aa273fbbf175d527",
          "jvod_id": "a731d75e39bf40708168cedef60ba404",
          "jvod_last_state_change_at": 1536151062350,
          "jvod_type": "s3",
          "jvod_url": "s3://alive-pr-us-west-2-di-tmp/a5c3b3f8149a43328fd5ac8124765808.mp4",
          "jvod_worker_id": "i-0dac4a87c61e688ab",
          "label": "first 30 secs of live job",
          "cloud_id": "301c91a5d9254b5d944b108c355f12be",
          "jvod_cancelling_flag": false,
          "jvod_created_at": 1536151027046,
          "jvod_duration_s": 93600,
          "jvod_reported_duration_s": null,
          "jvod_finished_at": 0,
          "jvod_region": "us-west-2",
          "account_id": "a95ac581551b4478b27910e5675db1f8",
          "user_id": "c2691d4d039040be96c190a949d754a7",
          "jvod_start_time_relative_s": 10,
          "jvod_end_time_relative_s": 300,
          "jvod_videocloud": {
            "video": {
              "name": "TEST Clip",
              "clip_source_video_id": "5831009084001"
            },
            "ingest": {}
          }
        }
    LiveJob:
      properties:
        ad_insertion:
          description: >-
            Setting this parameter to true will enable server side ad insertion (SSAI) on the job. Current support includes, DFP, Freewheel, or any VAST 2.0/3.0 ad tags.
          type: boolean
          default: false
          example: false
        playback_added_cdns:
          description: >-
            Array of additional CDN providers to be used for manifest
            generation. For each CDN provided, the manifest will be prepended
            accordingly
          items:
            $ref: '#/components/schemas/playback_added_cdns'
          type: array
        event_length:
          description: >-
            Used to preset and define an end time for the live event. At any
            point within the specified `event_length` you may reconnect to your
            stream. The `event_length` setting goes into effect as soon as
            streaming begins.
          type: integer
        id:
          description: Id for the stream.
          readOnly: true
          type: string
        live_stream:
          description: Indicates that the job is a live streaming job.
          type: boolean
        max_hls_protocol_version:
          default: 3
          description: >-
            Sets the maximum HLS protocol version to use. Special features will
            be used as available.
          type: integer
        notifications:
          description: >-
            Array of notification destination objects or strings.  A
            notification will be sent to the destination when selected event
            occurs. You can use a simple string with a url:
            &quot;http://log:pass@httpbin.org/post&quot;, or you can use an
            object. <br> Retry strategy: In the event of a failed request to
            send a notification, the default retry strategy is to retry 50 times
            with an exponential delay between attempts: <br> `max_retry_times =
            50` <br> `delay_delta_s = 5` <br>`next_retry = now_s + retry_count *
            delay_delta_s`
          items:
            oneOf:
              - description: URL that notifications should be sent to
                type: string
              - $ref: '#/components/schemas/Notification'
          type: array
        outputs:
          description: Details on each output rendition of the Live job.
          items:
            $ref: '#/components/schemas/Outputs'
          type: array
        reconnect_time:
          description: >-
            The time, in seconds, to wait for a stream to reconnect to the
            encoder. Default is set to 30 minutes.
          type: integer
        region:
          description: >-
            You can specify an Amazon AWS region to use for encoding a job and
            we will process the job on servers in the region specified. It’s
            recommended to use the region closest to your encoder.
          type: string
        sep_state:
          description: >-
            The current state of the job&#39;s SEP (static entry point) -
            possible values: &#39;waiting&#39; &#39;pending_activation&#39;,
            &#39;activation_in_progress&#39;, &#39;ready&#39;,
            &#39;pending_deactivation&#39;, &#39;deactivation_in_progress&#39;,
            &#39;cancelled&#39;, &#39;finished&#39;
          type: string
        slate:
          description: id for slate of assets to be included
          type: string
        stream_name:
          description: The stream name to add to your encoder configuration.
          readOnly: true
          type: string
        stream_url:
          description: The stream URL to add to your encoder configuration.
          readOnly: true
          type: string
      required:
        - id
        - stream_url
        - stream_name
        - outputs
        - live_stream
        - ad_insertion
        - region
        - reconnect_time
        - event_length
        - max_hls_protocol_version
        - slate
        - sep_state
        - notifications
        - add_cdns
      title: Create_a_Live_Job
      type: object
      example: {
          "id": "493885dfd7c64e23ad253fcc42c120d8",
          "outputs": [
            {
              "id": "0-493885dfd7c64e23ad253fcc42c120d8",
              "playback_url": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_0/chunklist.m3u8",
              "playback_url_dvr": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_0/chunklist_dvr.m3u8",
              "playback_url_vod": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_0/chunklist_vod.m3u8",
              "playback_added_cdns": [],
              "label": "hls720p"
            },
            {
              "id": "1-493885dfd7c64e23ad253fcc42c120d8",
              "playback_url": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_1/chunklist.m3u8",
              "playback_url_dvr": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_1/chunklist_dvr.m3u8",
              "playback_url_vod": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_1/chunklist_vod.m3u8",
              "playback_added_cdns": [],
              "label": "hls540p"
            },
            {
              "id": "2-493885dfd7c64e23ad253fcc42c120d8",
              "playback_url": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_2/chunklist.m3u8",
              "playback_url_dvr": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_2/chunklist_dvr.m3u8",
              "playback_url_vod": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/profile_2/chunklist_vod.m3u8",
              "playback_added_cdns": [],
              "label": "hls360p"
            },
            {
              "id": "3-493885dfd7c64e23ad253fcc42c120d8",
              "playlist_type": "defaultS3",
              "type": "playlist",
              "filename": "playlist.m3u8",
              "dvr_filename": "playlist_dvr.m3u8",
              "playback_url": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/playlist.m3u8",
              "playback_url_dvr": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/playlist_dvr.m3u8"
            }
          ],
          "stream_url": "rtmp://ep9-usw2.bcovlive.io:1935/493885dfd7c64e23ad253fcc42c120d8",
          "stream_name": "alive",
          "static": false,
          "encryption": {},
          "playback_url": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/playlist.m3u8",
          "playback_url_dvr": "https://bcovlive-a.akamaihd.net/493885dfd7c64e23ad253fcc42c120d8/us-west-2/NA/playlist_dvr.m3u8"
        }
    ManualAdCuePointInsertionResponse:
      properties:
        cue_point:
          $ref: '#/components/schemas/CuePoint'
        id:
          description: The id of the live stream job
          type: string
      required:
        - id
        - cue_point
      title: Manual_Ad_Cue_Point_Insertion_Response
      type: object
      example: {
          "cue_point": {
              "accuracy": "segment",
              "duration": 30,
              "id": "c1d242de729d4a76a605e018cc101601"
          },
          "id": "3ae7fa89943f4a96aa273fbbf175d527"
        }
    ManualAdCuePointInsertionbody:
      properties:
        ad_server_data:
          description: >-
            a set of any variables (key/value pairs) that should be passed to
            the adServer
          type: object
        duration:
          description: An integer value to indicate the length of the ad break in seconds
          type: number
        timecode:
          description: |-
            'When to insert the cuepoint in SMPTE HH:MM:SS:FF format from the stream start (FF = frames); if omitted, the cuepoint will be inserted immediately. Note:
              1. If you use the timecode property, the job only only stores the most recent request for insertion
              2. If you use the timecode property, the encoder must be sending SMPTE-formatted (HH:MM:SS:FF) timecode stored in the `tc` property via `OnFI`
              3. Software encoders such as Wirecast and OBS do not support the sending timecode via `OnFI` packets in the RTMP stream
              4. Elemental hardware encoders do support the sending timecode via `OnFI` packets in the RTMP stream'
          type: string
          example: {
              "duration": 30,
              "ad_server_data": {
                "subject": "wildlife"
              }
            }
      required:
        - duration
      title: Manual_Ad_Cue_Point_InsertionBody
      type: object
    Notification:
      properties:
        credentials:
          description: 'Credentials for the destination, if required.'
          type: string
        event:
          description: >-
            Event type to send notifications for.  It’s recommended to set
            events on the job and not individual rendition outputs since
            renditions will finish simultaneously.
          type: string
          enum:
            - state_changed
            - first_segment_uploaded
            - output_finished
            - rtmp_output_state_changed
        url:
          description: Destination for the notification.
          type: string
      required:
        - url
        - event
      title: notification
      type: object
    Outputs:
      properties:
        id:
          description: The unique id for the rendition.
          type: string
        playback_url:
          description: Media HLS manifest for the specified rendition (non-SSAI).
          type: string
        playback_url_dvr:
          description: >-
            Media HLS manifest for the specified rendition (with DVR
            capability).
          type: string
        playback_url_vod:
          description: >-
            Media HLS manifest for the VOD version of the stream if one was
            specified in the job settings - note that the VOD will not be
            available until the live event has finished and the creation of the
            VOD is complete.
          type: string
      required:
        - id
        - playback_url
        - playback_url_dvr
        - playback_url_vod
      title: outputs
      type: object
    StopRTMPOutputResponse:
      title: Stop RTMP output response
      description: Success response for stopping and RTMP output
      type: object
      properties:
        message:
          type: string
          description: Success message
          example:
            '{
              "message": "RTMP out asdfg-lkjh deleted successfully"
            }'
    UpdateAdConfigurationbody:
      properties:
        account_id:
          description: >-
            Your Live account id (if you leave this blank, the request will
            still work)
          type: string
        application_ad_configuration:
          $ref: >-
            #/components/schemas/UpdateAdConfigurationbody.applicationAdConfiguration
        application_description:
          description: Human readable description of the ad application.
          type: string
      required:
        - application_ad_configuration
        - application_description
      title: Update_Ad_ConfigurationBody
      type: object
    UpdateAdConfigurationbody.applicationAdConfiguration:
      properties:
        ad_configuration_description:
          description: Human readable description of the configuration.
          type: string
        ad_configuration_expected_response_type:
          description: The expected response type based on your ad server
          type: string
        ad_configuration_headers:
          description: >-
            An optional JSON object that can contain zero or more
            key-value-pairs, for which both key and value must be strings.  All
            of the standard URL substitutions are valid for headers.
          type: object
        ad_configuration_headers_for_impressions:
          description: >-
            If true, this configuration will send headers on all ad requests and
            impressions; if false, headers will not be sent on impressions
            (quartiles/impressions that we fire for tracking from an ad
            response).
          type: boolean
        ad_configuration_url_format:
          description: >-
            Format for the ad tag - see SSAI Using the Brightcove Live API for
            the available ad configuration variables.
          type: string
        ad_configuration_strategy:
          description: Specifies whether ad breaks should include single or muliple ads
          type: string
        ad_configuration_transforms:
          description: Array of ad configuration transforms.
          items:
            $ref: >-
              #/components/schemas/UpdateAdConfigurationbody.applicationAdConfiguration.adConfigurationTransforms
          type: array
      required:
        - ad_configuration_description
        - ad_configuration_expected_response_type
        - ad_configuration_url_format
        - ad_configuration_strategy
        - ad_configuration_transforms
      title: Update_Ad_ConfigurationBody.application_ad_configuration
      type: object
    UpdateAdConfigurationbody.applicationAdConfiguration.adConfigurationTransforms:
      properties:
        xpath:
          description: xpath for the transform.
          type: string
        xslt:
          description: xslt stylesheet for the transform.
          type: string
      required:
        - xpath
        - xslt
      title: >-
        Update_Ad_ConfigurationBody.application_ad_configuration.ad_configuration_transforms
      type: object
    UpdateBeaconSetbody:
      properties:
        account_id:
          description: URL for the slate to ingest
          type: string
        beacon_urls:
          description: Array of beacon URLs
          items:
            $ref: '#/components/schemas/UpdateBeaconSetbody.beaconUrls'
          type: array
      required:
        - beacon_urls
      title: Update_beacon_setBody
      type: object
    UpdateBeaconSetbody.beaconUrls:
      properties:
        beacon_type:
          description: >-
            the beacon type - see (
            https://support.brightcove.com/node/17763#Beacons) for the valid
            beacon types
          type: string
        beacon_url:
          description: >-
            URL format for the beacon - see (
            https://support.brightcove.com/node/17763#Beacons) for the valid
            beacon variables
          type: string
      required:
        - beacon_url
        - beacon_type
      title: Update_beacon_setBody.beacon_urls
      type: object
    UpdateCredential:
      properties:
        credential_id:
          description: The credential id
          type: string
        user_id:
          description: The user id
          type: string
      required:
        - credential_id
        - user_id
      title: Update_Credential_Response
      type: object
    UpdateCredentialbody:
      properties:
        credential_default_for_type:
          description: Whether these are the default credentials for the request type
          type: boolean
        credential_label:
          description: Label for the credential
          type: string
        credential_private:
          description: Private key or password depending on the type
          type: string
        credential_public:
          description: Public key or password depending on the type
          type: string
        credential_type:
          description: The credential type
          enum:
            - ftp
            - http
            - oauth
            - rtmp
            - s3
            - videocloud
            - zencoder
          type: string
        oauth_settings:
          $ref: '#/components/schemas/UpdateCredentialbody.oauthSettings'
        user_id:
          description: GUID for which the credentials are being created.
          type: string
      required:
        - user_id
        - credential_default_for_type
        - credential_label
        - credential_type
        - credential_private
        - credential_public
      title: Update_CredentialBody
      type: object
    UpdateCredentialbody.oauthSettings:
      title: Update_CredentialBody.oauth_settings
      type: object
      description: >-
        OAuth settings for OAuth credentials needed to send notifications to a
        notification URL Required for oauth type credentials
      properties:
        url:
          description: >-
            OAuth access token URL for OAuth credentials needed to send
            notifications to a notification URL
          type: string
      required:
        - url
    VodJobs:
      properties:
        jvod_id:
          description: The clip job id
          type: string
        label:
          description: The clip label (from the input)
          type: string
      required:
        - jvod_id
        - label
      title: vod_jobs
      type: object
    VodJobs2:
      properties:
        job_id:
          description: The parent job id
          type: string
        jvod_created_at:
          description: Time vod job was created (UNIX time in milliseconds)
          type: integer
        jvod_duration_s:
          description: Length of VOD clip requested (seconds)
          type: integer
        jvod_finished_at:
          description: Time vod job completed processing (UNIX time in milliseconds)
          type: integer
        jvod_id:
          description: The clip job id
          type: string
        jvod_last_state_change_at:
          description: Time vod job was last modified (UNIX time in milliseconds)
          type: integer
        jvod_region:
          description: Region VOD job is processed in
          enum:
            - us-west-2
            - us-east-1
            - ap-southeast-2
            - ap-northeast-1
            - ap-southeast-1
            - eu-central-1
            - eu-west-1
            - sa-east-1
          type: string
        jvod_reported_duration_s:
          description: Length of VOD clip as generated (seconds)
          type: integer
        jvod_state:
          description: |-
            Current vod job processing state

            Possible values for
            **VOD jobs** are:
            - `error` (An error has occurred; the job will not be processed.)
            - `waiting_finish_live` ()
            - `waiting` (The job waiting for processing.)
            - `waiting_finish_live` (The job waiting for the Live Job to finish [if the clip depends on that].)
            - `processing` (The clip is being processed.)
            - `creating_asset` (A VOD asset is being created.)
            - `cancelling` (The job has been cancelled and the worker is stopping the job and will NOT process any pending VOD outputs.)
            - `cancelled` (The job has been cancelled successfully.)
            - `finished` (The job has finished successfully.)
            - `failed` (The job has stopped as a result of a system error.)
          enum:
            - error
            - waiting
            - waiting_finish_live
            - processing
            - cancelling
            - cancelled
            - finished
            - failed
            - creating_asset
          type: string
        jvod_type:
          description: VOD job type
          enum:
            - s3
            - ftp
            - instant
            - error
          type: string
        jvod_url:
          description: 'VOD job destination (e.g. s3://somebucket or ftp://someserver)'
          type: string
        label:
          description: The clip label (from the input)
          type: string
        user_id:
          description: ID of creating user
          type: string
      required:
        - jvod_id
        - label
      title: vod_jobs2
      type: object
  parameters:
    ContentType:
      name: Content-Type
      in: header
      description: 'Content-Type: application/json'
      required: true
      style: simple
      explode: false
      schema:
        type: string
        default: application/json
      example: application/json
    XAPIKEY:
      name: X-API-KEY
      in: header
      description: 'X-API-KEY: {Your_Live_API_Key}'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    live_account_id:
      name: live_account_id
      in: path
      description: Live account ID
      required: true
      style: simple
      explode: false
      schema:
        type: string
    JobId:
      name: job_id
      in: path
      description: Live job ID
      required: true
      style: simple
      explode: false
      schema:
        type: string
    jvod_id:
      name: jvod_id
      in: path
      description: VOD job ID
      required: true
      style: simple
      explode: false
      schema:
        type: string
    rtmpOutId:
      name: rtmp_out_id
      in: path
      description: RTMP output ID
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CredentialId:
      name: credential_id
      in: path
      description: A credential ID
      required: true
      style: simple
      explode: false
      schema:
        type: string
    SlateMsaId:
      name: slate_msa_id
      in: path
      description: A slate media asset ID
      required: true
      style: simple
      explode: false
      schema:
        type: string
    BeaconSetId:
      name: beacon_set_id
      in: path
      description: A slate media asset ID
      required: true
      style: simple
      explode: false
      schema:
        type: string
    start_token:
      name: start_token
      in: query
      description: Next token from previous page; do not specify when fetching first page
      style: form
      explode: true
      schema:
        type: string
    page_size:
      name: page_size
      in: query
      description: 'Max number of jobs to return in one request (1-1000, default is 10)'
      style: form
      explode: true
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 10
    sort:
      name: sort
      in: query
      description: >-
        Attribute to sort jobs by (`created_at` | `modified_at`, default is
        `created_at`)
      style: form
      explode: true
      schema:
        type: string
        enum:
          - created_at
          - modified_at
        default: created_at
    sort_dir:
      name: sort_dir
      in: query
      description: 'Sort direction (default is asc):`asc` - ascending; `desc` - descending'
      style: form
      explode: true
      schema:
        type: string
        enum:
          - asc
          - desc
        default: asc
    user_id:
      name: user_id
      in: query
      description: Filter results by one or more user IDs
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
            description: User id
          - type: array
            items:
              type: string
              description: User id
    account_id:
      name: account_id
      in: query
      description: >-
        Filter results by particular account, or specify ‘*’ to search all
        accounts.  Default value is account API key belongs to
      style: form
      explode: true
      schema:
        type: string
    created_at:
      name: created_at
      in: query
      description: Filter results by Unix time of job creation (in milliseconds)
      style: form
      explode: true
      schema:
        type: integer
    modified_at:
      name: modified_at
      in: query
      description: Filter results by Unix time of job last modified (in milliseconds)
      style: form
      explode: true
      schema:
        type: integer
    ad_insertion:
      name: ad_insertion
      in: query
      description: Filter results by is SSAI enabled
      style: form
      explode: true
      schema:
        type: boolean
    static:
      name: static
      in: query
      description: Filter results by has static endpoint
      style: form
      explode: true
      schema:
        type: boolean
    state:
      name: state
      in: query
      description: Filter results by one or more job states
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
            description: Job state
            enum:
              - error
              - standby
              - waiting
              - processing
              - disconnected
              - cancelling
              - finishing
              - cancelled
              - finished
              - failed
          - type: array
            items:
              type: string
              description: Job state
              enum:
                - error
                - standby
                - waiting
                - processing
                - disconnected
                - cancelling
                - finishing
                - cancelled
                - finished
                - failed
    ssai_state:
      name: ssai_state
      in: query
      description: Filter results by one or more SSAI states
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
            description: SSAI job state
            enum:
              - none
              - ready
              - waiting_input
              - start_transcoding
              - transcoding
              - error
          - type: array
            items:
              type: string
              description: SSAI job state
              enum:
                - none
                - ready
                - waiting_input
                - start_transcoding
                - transcoding
                - error
    region:
      name: region
      in: query
      description: Filter results by one or more regions
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
            description: region
            enum:
              - us-west-2
              - us-east-1
              - ap-southeast-2
              - ap-northeast-1
              - ap-southeast-1
              - eu-central-1
              - eu-west-1
              - sa-east-1
          - type: array
            items:
              type: string
              description: region
              enum:
                - us-west-2
                - us-east-1
                - ap-southeast-2
                - ap-northeast-1
                - ap-southeast-1
                - eu-central-1
                - eu-west-1
                - sa-east-1
    jvod_state:
      name: jvod_state
      in: query
      description: Filter results by one or more VOD job states
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
            description: VOD Job state
            enum:
              - error
              - waiting
              - waiting_finish_live
              - processing
              - cancelling
              - cancelled
              - finished
              - failed
              - creating_asset
          - type: array
            items:
              type: string
              description: VOD Job state
              enum:
                - error
                - waiting
                - waiting_finish_live
                - processing
                - cancelling
                - cancelled
                - finished
                - failed
                - creating_asset
    jvod_type:
      name: jvod_type
      in: query
      description: Filter results by one or more VOD job types
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
            description: VOD Job type
            enum:
              - s3
              - ftp
              - instant
              - error
          - type: array
            items:
              type: string
              description: VOD Job type
              enum:
                - s3
                - ftp
                - instant
                - error
    label:
      name: label
      in: query
      description: Filter results by one or more VOD job labels
      style: form
      explode: true
      schema:
        oneOf:
          - type: string
            description: VOD job label
            enum:
              - none
              - ready
              - waiting_input
              - start_transcoding
              - transcoding
              - error
          - type: array
            items:
              type: string
              description: VOD job label
              enum:
                - none
                - ready
                - waiting_input
                - start_transcoding
                - transcoding
                - error
    application_id:
      name: application_id
      in: path
      description: The ad application id
      required: true
      style: simple
      explode: false
      schema:
        type: string
