=begin
#Live API Reference

#Reference for the Brightcove Live API, used to create and manage live streaming events.  For additional in-depth guides to features of the API, see the **[Support Site](https://support.brightcove.com/live-api)**.  **Base URL**: https://api.bcovlive.io/v1

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for BrightcoveLive::LiveJobsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LiveJobsApi' do
  before do
    # run before each test
    @api_instance = BrightcoveLive::LiveJobsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LiveJobsApi' do
    it 'should create an instance of LiveJobsApi' do
      expect(@api_instance).to be_instance_of(BrightcoveLive::LiveJobsApi)
    end
  end

  # unit tests for activate_sep_stream
  # Activate SEP Stream
  # Activate SEP (static entry point) Stream
  # @param job_id Live job ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param [Hash] opts the optional parameters
  # @return [ActivateSepStreamResponse]
  describe 'activate_sep_stream test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_ad_matadata
  # Add or update Ad Metadata
  # Allows  content metadata to be pushed and constantly updated out-of-band from a customer live stream..
  # @param job_id Live job ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param add_ad_matadatabody Contains a set of key/value pairs for ad requests.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_ad_matadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_live_job
  # Cancel Live Job
  # Cancel a live stream. When a live job is cancelled, it is ended, and any unprocessed VOD jobs associated with the live job will **not** be processed.
  # @param job_id Live job ID
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param [Hash] opts the optional parameters
  # @return [CancelLiveJob]
  describe 'cancel_live_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_a_live_job
  # Create a Live Job
  # Create a live streaming job
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param create_live_job_request_body Create a live stream
  # @param [Hash] opts the optional parameters
  # @return [LiveJob]
  describe 'create_a_live_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_playback_token
  # Create Playback Token
  # Live jobs created via the Live module in Studio (or by specifying &#x60;videocloud.video&#x60; when creating a job directly through the API) automatically create a special Video Cloud video that, when used in a Brightcove player, makes use of the &#x60;ad_config_id&#x60; property to select the specific source desired (i.e. SSAI source, DVR/no DVR, BYOCDN). Jobs which have SSAI enabled must always provide an &#x60;ad_config_id&#x60; in the player, even if the source desired is non-SSAI (this prevents an end user from omitting the &#x60;ad_config_id&#x60; and receiving a clear stream). **This applies only to live Video Cloud videos created via the Live module or Live API - manually created Video Cloud remote assets have no such restriction.**  The request returns a generated &#x60;ad_config_id&#x60;.  This behavior is handled automatically when you publish a live video from the Live module publishing screen, but may be useful if you have a custom workflow.
  # @param job_id Live job ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param [Hash] opts the optional parameters
  # @option opts [CreatePlaybackTokenRequestBody] :create_playback_token_request_body Create a live stream
  # @return [PlaybackToken]
  describe 'create_playback_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for deactivate_sep_stream
  # Deactivate SEP Stream
  # Deactivate SEP (static entry point) Stream 
  # @param job_id Live job ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param [Hash] opts the optional parameters
  # @return [DeactivateSepStreamResponse]
  describe 'deactivate_sep_stream test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ad_matadata
  # Delete Ad Metadata
  # Deletes ad metadata from a customer live stream..
  # @param job_id Live job ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ad_matadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_live_job_details
  # Get Live Job Details
  # Get Live Job Details
  # @param job_id Live job ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param [Hash] opts the optional parameters
  # @return [Job]
  describe 'get_live_job_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for insert_id3_timed_metadata
  # Insert ID3 Timed Metadata
  # Inserts an ID3 timed metadata tag for an ongoing job. Note that: 1) If using timecode property, the job only stores the most recent request for insertion; 2) If using timecode property, the encoder must be sending SMPTE-formatted (HH:MM:SS:FF) timecode stored in the tc property via OnFI
  # @param job_id Live job ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param insert_id3_timed_metadatabody &#39;Inserts an ID3 timed metadata tag for an ongoing job. Note that:   1. If using timecode property, the job only stores the most recent request for insertion   2. If using timecode property, the encoder must be sending SMPTE-formatted (HH:MM:SS:FF) timecode stored in the tc property via OnFI&#39;
  # @param [Hash] opts the optional parameters
  # @return [InsertId3TimedMetadataResponse]
  describe 'insert_id3_timed_metadata test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_live_jobs
  # List Live Jobs
  # &#39;List live jobs - for additional useful information on the search filters, see [Getting a List of Live or VOD Jobs](https://support.brightcove.com/getting-list-live-or-vod-jobs)&#39;
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_token Next token from previous page; do not specify when fetching first page
  # @option opts [Integer] :page_size Max number of jobs to return in one request (1-1000, default is 10)
  # @option opts [String] :sort Attribute to sort jobs by (&#x60;created_at&#x60; | &#x60;modified_at&#x60;, default is &#x60;created_at&#x60;)
  # @option opts [String] :sort_dir Sort direction (default is asc):&#x60;asc&#x60; - ascending; &#x60;desc&#x60; - descending
  # @option opts [OneOfstringarray] :user_id Filter results by one or more user IDs
  # @option opts [String] :account_id Filter results by particular account, or specify ‘*’ to search all accounts.  Default value is account API key belongs to
  # @option opts [Integer] :created_at Filter results by Unix time of job creation (in milliseconds)
  # @option opts [Integer] :modified_at Filter results by Unix time of job last modified (in milliseconds)
  # @option opts [Boolean] :ad_insertion Filter results by is SSAI enabled
  # @option opts [Boolean] :static Filter results by has static endpoint
  # @option opts [OneOfstringarray] :state Filter results by one or more job states
  # @option opts [OneOfstringarray] :ssai_state Filter results by one or more SSAI states
  # @option opts [OneOfstringarray] :region Filter results by one or more regions
  # @return [ListLiveJobsResponse]
  describe 'list_live_jobs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for manual_ad_cue_point_insertion
  # Manual Cue Point Insertion
  # Inserts a manual Cue-Out with a duration to the Live ingest point.
  # @param job_id Live job ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param manual_ad_cue_point_insertionbody Inserts a manual Cue-Out with a duration to the Live ingest point.
  # @param [Hash] opts the optional parameters
  # @return [ManualAdCuePointInsertionResponse]
  describe 'manual_ad_cue_point_insertion test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stop_live_job
  # Stop Live Job
  # Stop a live job. When a live job is stopped (as opposed to cancelled), the live stream will stop, but any VOD jobs associated with the live job **will** continue to process.
  # @param job_id Live job ID
  # @param x_api_key X-API-KEY: {Your_Live_API_Key}
  # @param [Hash] opts the optional parameters
  # @return [StopLiveJob]
  describe 'stop_live_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
