=begin
#Live API Reference

#Reference for the Brightcove Live API, used to create and manage live streaming events.

OpenAPI spec version: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for BrightcoveLive::SSAIApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SSAIApi' do
  before do
    # run before each test
    @instance = BrightcoveLive::SSAIApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SSAIApi' do
    it 'should create an instance of SSAIApi' do
      expect(@instance).to be_instance_of(BrightcoveLive::SSAIApi)
    end
  end

  # unit tests for create_ad_configuration
  # Create_Ad_Configuration
  # Create a configuration for server-side ad application. 
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param create_ad_configurationbody Create a configuration for server-side ad application.
  # @param [Hash] opts the optional parameters
  # @return [Application]
  describe 'create_ad_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_beacon_set
  # Create_beacon_set
  # Beacons are data points on playback sent to ad servers to track whether and how much of ads were played. Creates a beacon set. 
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param create_beacon_setbody Beacons are data points on playback sent to ad servers to track whether and how much of ads were played. Creates a beacon set.
  # @param [Hash] opts the optional parameters
  # @return [BeaconSet]
  describe 'create_beacon_set test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ad_configuration
  # Delete_Ad_Configuration
  # Delete an ad application. 
  # @param application_id The ad application id
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [DeleteAdConfiguration200]
  describe 'delete_ad_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_beacon_set
  # Delete_beacon_set
  # Deletes a beacon set. 
  # @param beacon_set_id A slate media asset ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [DeleteBeaconSet200]
  describe 'delete_beacon_set test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_slate_media_source_asset
  # Delete_Slate_Media_Source_Asset
  # Delete Slate Media Source Asset. 
  # @param slate_msa_id A slate media asset ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [DeleteSlateMediaSourceAsset200]
  describe 'delete_slate_media_source_asset test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_ad_configurations
  # Get_Account_Ad_Configurations
  # Get ad applications for an account. 
  # @param account_id Live account ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [Application]
  describe 'get_account_ad_configurations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ad_configuration
  # Get_Ad_Configuration
  # Get an ad application. 
  # @param application_id The ad application id
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [Application]
  describe 'get_ad_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_beacon_sets
  # Get_beacon_sets
  # Get all beacon sets for an account. 
  # @param account_id Live account ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [BeaconSet]
  describe 'get_beacon_sets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_beacon_sets_for_user
  # Get_beacon_sets_for_user
  # Get all beacon sets for the requesting user. 
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [BeaconSet]
  describe 'get_beacon_sets_for_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_slates_for_account
  # Get_slates_for_account
  # Get all beacon sets for an account. 
  # @param account_id Live account ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [GetSlateMediaSourceAssets200]
  describe 'get_slates_for_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user_slate_media_source_assets
  # Get_User_Slate_Media_Source_Assets
  # Get Slate Media Source Assets for the current user. 
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [GetSlateMediaSourceAssets200]
  describe 'get_user_slate_media_source_assets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for getuser_ad_configurations
  # Get_Ad_Configurations
  # Get ad applications for the current user.
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param [Hash] opts the optional parameters
  # @return [Application]
  describe 'getuser_ad_configurations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ingest_slate_media_source_asset
  # Ingest_Slate_Media_Source_Asset
  # Ingest Slate Media Source Asset. 
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param ingest_slate_media_source_assetbody Ingest Slate Media Source Asset.
  # @param [Hash] opts the optional parameters
  # @return [IngestSlateMediaSourceAsset200]
  describe 'ingest_slate_media_source_asset test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_ad_configuration
  # Update_Ad_Configuration
  # Update a configuration for server-side ad application. 
  # @param application_id The ad application id
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param update_ad_configurationbody Update a configuration for server-side ad application.
  # @param [Hash] opts the optional parameters
  # @return [Application]
  describe 'update_ad_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_beacon_set
  # Update_beacon_set
  # Updates a beacon set. 
  # @param beacon_set_id A slate media asset ID
  # @param content_type Content-Type: application/json
  # @param x_api_key X-API-KEY: {APIKey}
  # @param update_beacon_setbody Updates a beacon set.
  # @param [Hash] opts the optional parameters
  # @return [BeaconSet]
  describe 'update_beacon_set test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
